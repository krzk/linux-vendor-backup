	Debug fs for the gpio in Exynos

Gyeongtaek Lee (gt82.lee@samsung.com)

1. What it does?
This debug file system shows the power down configuration of the GPIOs.

2. How to use

2.1. Enabling the debug fs for the GPIO power down configuration.
(1) Configure the kernel source to enable debug fs
$ make menuconfig
(2) Check "Kernel hacking --> Debug Filesystem"
(3) Build and download the kernel.

2.2. Viewing the debug fs for the GPIO power down configuration.
(1) Turn the device on and access the terminal.
(2) Change directory to debug fs.
$ cd /sys/kernel/debug
(3) Cat pd_gpio
$ cat pd_gpio
gpv6-0    OUT0   PULL_NONE
gpv6-1    OUT0   PULL_NONE
gpv6-2    OUT0   PULL_NONE
......

2.3. Each field is,
(1) Normal GPIO (Other than GPA): [GPIO]  [STATUS]  [PULL]
[GPIO]: gpio name
[STATUS]: OUT0(output low), OUT1(output high), INPUT(input), PREV(preserve normal status)
[PULL]: PULL_UP(pull up), PULL_DOWN(pull down)

(2) Alive GPIO (GPA): [GPIO]  [STATUS]  [PULL]  [OUTPUT]
[GPIO]: gpio name
[STATUS]: INPUT(input), OUTPUT(output), SFN(x)(special function x. Ex. SFN(f)=external interrupt)
[PULL]: PULL_UP(pull up), PULL_DOWN(pull down)
[OUTPUT]: If STATUS is OUTPUT, 0 is low and 1 is high. If STATUS is not OUTPUT, it would be ignored.

2.4. Changing the GPIO power down configuration
(1) Turn the device on and access the terminal.
(2) Change directory to debug fs.
$ cd /sys/kernel/debug
(3) Echo new configuration
$ echo  "gpj1-1    OUT0   PULL_DOWN" > pd_gpio

(4) Several configuration can be written.
$ echo  "gpj1-1    OUT0   PULL_DOWN gpj1-2    OUT1   PULL_up" > pd_gpio
