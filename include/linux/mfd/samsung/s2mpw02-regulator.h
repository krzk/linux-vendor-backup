/*
 * s2mpw02-private.h - Voltage regulator driver for the s2mpw02
 *
 *  Copyright (C) 2018 Samsung Electrnoics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef __LINUX_MFD_S2MPW02_PRIV_H
#define __LINUX_MFD_S2MPW02_PRIV_H

#include <linux/mfd/samsung/s2mpw02.h>

/* SPEEDY Slave addr = 0x01 */

/* PMIC Registers */
#define S2MPW02_PMIC_REG_INT1		(0x00)
#define S2MPW02_PMIC_REG_INT2		0x01
#define S2MPW02_PMIC_REG_INT3		0x02
#define S2MPW02_PMIC_REG_INT1M		0x03
#define S2MPW02_PMIC_REG_INT2M		0x04
#define S2MPW02_PMIC_REG_INT3M		0x05
#define S2MPW02_PMIC_REG_STATUS1	0x06
#define S2MPW02_PMIC_REG_STATUS2	0x07
#define S2MPW02_PMIC_REG_PWRONSRC	0x08
#define S2MPW02_PMIC_REG_OFFSRC		0x09

#define S2MPW02_PMIC_REG_RTCBUF		0x0B
#define S2MPW02_PMIC_REG_CTRL1		0x0C
#define S2MPW02_PMIC_REG_CTRL3		0x0E
#define S2MPW02_PMIC_REG_TIME_CTRL1	0x12

#define S2MPW02_PMIC_REG_B1CTRL		0x14
#define S2MPW02_PMIC_REG_B1OUT		0x15
#define S2MPW02_PMIC_REG_B2CTRL		0x16
#define S2MPW02_PMIC_REG_B2OUT1		0x17
#define S2MPW02_PMIC_REG_B2OUT2		0x18
#define S2MPW02_PMIC_REG_B3CTRL		0x19
#define S2MPW02_PMIC_REG_B3OUT1		0x1A
#define S2MPW02_PMIC_REG_B3OUT2		0x1B
#define S2MPW02_PMIC_REG_B4CTRL		0x1C
#define S2MPW02_PMIC_REG_B4OUT1		0x1D
#define S2MPW02_PMIC_REG_B4OUT2		0x1E
#define S2MPW02_PMIC_REG_RAMP		0x1F
#define S2MPW02_PMIC_REG_BST2CTRL 	0x21
#define S2MPW02_PMIC_REG_BST1CTRL 	0x22
#define S2MPW02_PMIC_REG_L8DVS 		0x23
#define S2MPW02_PMIC_REG_L1CTRL 	0x24
#define S2MPW02_PMIC_REG_L2CTRL 	0x25
#define S2MPW02_PMIC_REG_L3CTRL 	0x26
#define S2MPW02_PMIC_REG_L4CTRL 	0x27
#define S2MPW02_PMIC_REG_L5CTRL 	0x28
#define S2MPW02_PMIC_REG_L6CTRL 	0x29
#define S2MPW02_PMIC_REG_L7CTRL 	0x2A
#define S2MPW02_PMIC_REG_L8CTRL 	0x2B
#define S2MPW02_PMIC_REG_L9CTRL 	0x2C
#define S2MPW02_PMIC_REG_L10CTRL 	0x2D
#define S2MPW02_PMIC_REG_L11CTRL 	0x2E
#define S2MPW02_PMIC_REG_L12CTRL 	0x2F
#define S2MPW02_PMIC_REG_L13CTRL 	0x30
#define S2MPW02_PMIC_REG_L14CTRL 	0x31
#define S2MPW02_PMIC_REG_L15CTRL 	0x32
#define S2MPW02_PMIC_REG_L16CTRL 	0x33
#define S2MPW02_PMIC_REG_L17CTRL 	0x34
#define S2MPW02_PMIC_REG_L18CTRL 	0x35
#define S2MPW02_PMIC_REG_L19CTRL 	0x36
#define S2MPW02_PMIC_REG_L20CTRL 	0x37
#define S2MPW02_PMIC_REG_L21CTRL 	0x38
#define S2MPW02_PMIC_REG_L22CTRL 	0x39
#define S2MPW02_PMIC_REG_L23CTRL 	0x3A
#define S2MPW02_PMIC_REG_L24CTRL 	0x3B
#define S2MPW02_PMIC_REG_L25CTRL 	0x3C
#define S2MPW02_PMIC_REG_L26CTRL 	0x3D
#define S2MPW02_PMIC_REG_L27CTRL 	0x3E
#define S2MPW02_PMIC_REG_L28CTRL 	0x3F
#define S2MPW02_PMIC_REG_L29CTRL 	0x40
#define S2MPW02_PMIC_REG_L30CTRL 	0x41
#define S2MPW02_PMIC_REG_L31CTRL1 	0x42
#define S2MPW02_PMIC_REG_L31CTRL2 	0x43
#define S2MPW02_PMIC_REG_LDO_DSCH1 	0x44
#define S2MPW02_PMIC_REG_LDO_DSCH2 	0x45
#define S2MPW02_PMIC_REG_LDO_DSCH3 	0x46
#define S2MPW02_PMIC_REG_LDO_DSCH4 	0x47
#define S2MPW02_PMIC_REG_LDO_CTRL4 	0x4E
#define S2MPW02_PMIC_REG_OFFSEQ_CTRL	0x57
#define S2MPW02_PMIC_REG_OFFSEQ_G1	0x58
#define S2MPW02_PMIC_REG_OFFSEQ_G2	0x59
#define S2MPW02_PMIC_REG_OFFSEQ_G3	0x5A
#define S2MPW02_PMIC_REG_OFFSEQ_G4	0x5B
#define S2MPW02_PMIC_REG_OFFSEQ_G5	0x5C
#define S2MPW02_PMIC_REG_OFFSEQ_G6	0x5D
#define S2MPW02_PMIC_REG_OFFSEQ_G7	0x5E
#define S2MPW02_PMIC_REG_OFFSEQ_G8	0x5F
#define S2MPW02_PMIC_REG_OFFSEQ_G9	0x60
#define S2MPW02_PMIC_REG_OFFSEQ_G10	0x61
#define S2MPW02_PMIC_REG_ONSEQ1		0x64
#define S2MPW02_PMIC_REG_ONSEQ2		0x65
#define S2MPW02_PMIC_REG_ONSEQ3		0x66
#define S2MPW02_PMIC_REG_ONSEQ4		0x67
#define S2MPW02_PMIC_REG_ONSEQ5		0x68
#define S2MPW02_PMIC_REG_ONSEQ6		0x69
#define S2MPW02_PMIC_REG_ONSEQ7		0x6A
#define S2MPW02_PMIC_REG_ONSEQ8		0x6B
#define S2MPW02_PMIC_REG_ONSEQ9		0x6C
#define S2MPW02_PMIC_REG_ONSEQ10	0x6D
#define S2MPW02_PMIC_REG_ONSEQ11	0x6E
#define S2MPW02_PMIC_REG_ONSEQ12	0x6F
#define S2MPW02_PMIC_REG_ONSEQ13	0x70
#define S2MPW02_PMIC_REG_ONSEQ14	0x71
#define S2MPW02_PMIC_REG_ONSEQ15	0x72
#define S2MPW02_PMIC_REG_ONSEQ16	0x73
#define S2MPW02_PMIC_REG_ONSEQ17	0x74
#define S2MPW02_PMIC_REG_ONSEQ18	0x75
#define S2MPW02_PMIC_REG_ONSEQ19	0x76
#define S2MPW02_PMIC_REG_ONSEQ_MSB1	0x77
#define S2MPW02_PMIC_REG_ONSEQ_MSB2	0x78
#define S2MPW02_PMIC_REG_ONSEQ_MSB3	0x79
#define S2MPW02_PMIC_REG_ONSEQ_MSB4	0x7A
#define S2MPW02_PMIC_REG_ONSEQ_MSB5	0x7B
#define S2MPW02_PMIC_REG_EXT_CTRL	0xFF

/* status1 register fields */
#define S2MPW02_STATUS1_PWRON_M		(0x1 << 0)
#define S2MPW02_STATUS1_JIGONB_M	(0x1 << 1)
#define S2MPW02_STATUS1_ACOKB_M		(0x1 << 2)
#define S2MPW02_STATUS1_MRB_M		(0x1 << 4)
#define S2MPW02_STATUS1_PWRON1S_M	(0x1 << 5)
#define S2MPW02_STATUS1_INT120CS_M	(0x1 << 6)
#define S2MPW02_STATUS1_INT140CS_M	(0x1 << 7)

/* S2MPW02regulator ids */
enum S2MPW02_regulators {
	S2MPW02_LDO1,
	S2MPW02_LDO2,
	S2MPW02_LDO3,
	S2MPW02_LDO4,
	S2MPW02_LDO5,
	S2MPW02_LDO6,
	S2MPW02_LDO7,
	S2MPW02_LDO8,
	S2MPW02_LDO9,
	S2MPW02_LDO10,
	S2MPW02_LDO11,
	S2MPW02_LDO12,
	S2MPW02_LDO13,
	S2MPW02_LDO14,
	S2MPW02_LDO15,
	S2MPW02_LDO16,
	S2MPW02_LDO17,
	S2MPW02_LDO18,
	S2MPW02_LDO19,
	S2MPW02_LDO20,
	S2MPW02_LDO21,
	S2MPW02_LDO22,
	S2MPW02_LDO23,
	S2MPW02_LDO24,
	S2MPW02_LDO25,
	S2MPW02_LDO26,
	S2MPW02_LDO27,
	S2MPW02_LDO28,
	S2MPW02_LDO29,
	S2MPW02_LDO30,
	S2MPW02_LDO31,
	S2MPW02_BUCK1,
	S2MPW02_BUCK2,
	S2MPW02_BUCK3,
	S2MPW02_BUCK4,
	S2MPW02_BST2,
	S2MPW02_BST1,
	S2MPW02_REG_MAX,
};

/**
 * sec_regulator_data - regulator data
 * @id: regulator id
 * @initdata: regulator init data (contraints, supplies, ...)
 */
struct s2mpw02_regulator_data {
	int id;
	struct regulator_init_data *initdata;
	struct device_node *reg_node;
};

/*
 * samsung regulator operation mode
 * SEC_OPMODE_OFF	Regulator always OFF
 * SEC_OPMODE_ON	Regulator always ON
 * SEC_OPMODE_LOWPOWER  Regulator is on in low-power mode
 * SEC_OPMODE_SUSPEND   Regulator is changed by PWREN pin
 *			If PWREN is high, regulator is on
 *			If PWREN is low, regulator is off
 */
enum sec_opmode {
	SEC_OPMODE_OFF,
	SEC_OPMODE_SUSPEND,
	SEC_OPMODE_LOWPOWER,
	SEC_OPMODE_ON,
	SEC_OPMODE_TCXO = 0x2,
};

#define S2MPW02_BUCK_MIN1	400000
#define S2MPW02_BUCK_MIN2	600000
#define S2MPW02_LDO_MIN1	400000
#define S2MPW02_LDO_MIN2	500000
#define S2MPW02_LDO_MIN3	700000
#define S2MPW02_LDO_MIN4	1800000
#define S2MPW02_BST_EVT0_MIN1	4900000
#define S2MPW02_BST_EVT1_MIN1	4500000
#define S2MPW02_BUCK_STEP1	6250
#define S2MPW02_BUCK_STEP2	12500
#define S2MPW02_LDO_STEP1	12500
#define S2MPW02_LDO_STEP2	25000
#define S2MPW02_BST_STEP1	100000
#define S2MPW02_LDO_VSEL_MASK	0x3F
#define S2MPW02_BUCK_VSEL_MASK	0xFF
#define S2MPW02_BST_VSEL_MASK	0x07
#define S2MPW02_ENABLE_MASK	(0x03 << S2MPW02_ENABLE_SHIFT)
#define S2MPW02_SW_ENABLE_MASK	0x03
#define S2MPW02_RAMP_DELAY	12000

#define S2MPW02_BUCK_RANGE1_MIN		S2MPW02_BUCK_MIN1
#define S2MPW02_BUCK_RANGE1_STEP	S2MPW02_BUCK_STEP1
#define S2MPW02_BUCK_RANGE2_MIN		S2MPW02_BUCK_MIN2
#define S2MPW02_BUCK_RANGE2_STEP	S2MPW02_BUCK_STEP2

#define S2MPW02_LDO_RANGE1_MIN		S2MPW02_LDO_MIN4
#define S2MPW02_LDO_RANGE1_STEP		S2MPW02_LDO_STEP2
#define S2MPW02_LDO_RANGE2_MIN		S2MPW02_LDO_MIN3
#define S2MPW02_LDO_RANGE2_STEP		S2MPW02_LDO_STEP2
#define S2MPW02_LDO_RANGE3_MIN		S2MPW02_LDO_MIN3
#define S2MPW02_LDO_RANGE3_STEP		S2MPW02_LDO_STEP1
#define S2MPW02_LDO_RANGE4_MIN		S2MPW02_LDO_MIN1
#define S2MPW02_LDO_RANGE4_STEP		S2MPW02_LDO_STEP2
#define S2MPW02_LDO_RANGE5_MIN		S2MPW02_LDO_MIN2
#define S2MPW02_LDO_RANGE5_STEP		S2MPW02_LDO_STEP1

#define S2MPW02_BST_RANGE1_MIN		S2MPW02_BST_EVT1_MIN1
#define S2MPW02_BST_RANGE1_STEP		S2MPW02_BST_STEP1

#define S2MPW02_ENABLE_TIME_LDO		128
#define S2MPW02_ENABLE_TIME_BUCK1	0
#define S2MPW02_ENABLE_TIME_BUCK2	106
#define S2MPW02_ENABLE_TIME_BUCK3	0
#define S2MPW02_ENABLE_TIME_BUCK4	0
#define S2MPW02_ENABLE_TIME_BST		500

#define S2MPW02_ENABLE_SHIFT	0x06
#define S2MPW02_LDO_N_VOLTAGES	(S2MPW02_LDO_VSEL_MASK + 1)
#define S2MPW02_BUCK_N_VOLTAGES (S2MPW02_BUCK_VSEL_MASK + 1)
#define S2MPW02_BST_N_VOLTAGES (S2MPW02_BST_VSEL_MASK + 1)

#define S2MPW02_PMIC_EN_SHIFT	6
#define S2MPW02_REGULATOR_MAX (S2MPW02_REG_MAX)

#define S2MPW02_FG_SENSING_VBATFG   (0 << 7)
#define S2MPW02_FG_SENSING_VSYS   (1 << 7)
#define S2MPW02_FG_SENSING_MASK   (1 << 7)

/* STATUS */
#define ACOK_STATUS_SHIFT	2
#define ACOK_STATUS_MASK	BIT(ACOK_STATUS_SHIFT)

#define SEC_PMIC_REV(iodev)	((iodev)->pmic_rev)


#endif /* __LINUX_MFD_S2MPW02_PRIV_H */

