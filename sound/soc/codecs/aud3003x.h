/*
 * sound/soc/codec/aud3003x.h
 *
 * ALSA SoC Audio Layer - Samsung Codec Driver
 *
 * Copyright (C) 2019 Samsung Electronics
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef _AUD3003X_H
#define _AUD3003X_H

#include <linux/completion.h>
#include <sound/soc.h>
#include <linux/iio/consumer.h>

#define CONFIG_SND_SOC_SAMSUNG_VERBOSE_DEBUG 1

#define S2MPU10_ADDR				0
#define S2MPU11_ADDR				1

#define REV_0_0						0
#define REV_0_1						1

#define AUD3003X_COMMON_ADDR			0x00
#define AUD3003X_OTP_ADDR				0x03
#define AUD3003X_DIGITAL_ADDR			0x07
#define AUD3003X_ANALOG_ADDR			0X08
#define AUD3003X_CLOSE_ADDR				0x0F

#define AUD3003X_REGCACHE_SYNC_START	0x00
#define AUD3003X_REGCACHE_SYNC_END		0xFF

#define AUD3003X_SAMPLE_RATE_48KHZ		48000
#define AUD3003X_SAMPLE_RATE_192KHZ		192000
#define AUD3003X_SAMPLE_RATE_384KHZ		384000

#define BIT_RATE_16 	16
#define BIT_RATE_32		32

struct aud3003x_jack;

enum aud3003x_type {
	CODEC_CLOSE = -1,
	AUD3003D = 0,
	AUD3003A,
	AUD3003O,
};

enum aud3003x_amic {
	AMIC_L = 1,
	AMIC_C,
	AMIC_R,
};

struct aud3003x_priv {
	/* codec driver default */
	struct snd_soc_component *codec;
	struct aud3003x_jack *p_jackdet;
	struct device *dev;
	struct i2c_client *i2c_priv[3];
	struct regmap *regmap[3];
	/* regulator */
	struct regulator *vdd;
	struct regulator *vdd2;
	int regulator_count;
	/* codec mutex */
	struct mutex adc_mute_lock;
	struct mutex dacl_mute_lock;
	struct mutex dacr_mute_lock;
	struct mutex regcache_lock;
	struct mutex regmap_lock;
	struct mutex cap_cal_lock;
	struct mutex bgr_pulldn_lock;
	/* codec workqueue */
	struct delayed_work bgr_pulldn_work;
	struct workqueue_struct *bgr_pulldn_wq;
	struct delayed_work amicl_cap_cal_work;
	struct workqueue_struct *amicl_cap_cal_wq;
	struct delayed_work amicc_cap_cal_work;
	struct workqueue_struct *amicc_cap_cal_wq;
	struct delayed_work amicr_cap_cal_work;
	struct workqueue_struct *amicr_cap_cal_wq;
	struct delayed_work adc_mute_work;
	struct workqueue_struct *adc_mute_wq;
	/* codec parse dt */
	u16 model_feature_flag;
	/* saved information */
	unsigned int codec_ver;
	bool is_suspend;
	bool pm_suspend;
	bool is_probe_done;
	bool playback_on;
	bool capture_on;
	unsigned int playback_aifrate;
	unsigned int capture_aifrate;
	unsigned int lvol;
	unsigned int rvol;
	unsigned int mic_status;
	int dmic_bias_gpio;
	int hp_avc_gain;
	int rcv_avc_gain;
	bool hp_vts_on;
	bool amic_vts_on;
	bool bgr_pulldn_flag;
	bool amic_cal_done;
};

/* Forward Declarations */
/* Main Functions */
int aud3003x_disable(struct device *dev);
int aud3003x_enable(struct device *dev);
void regcache_cache_switch(struct aud3003x_priv *aud3003x, bool on);
void aud3003x_adc_digital_mute(struct snd_soc_component *codec, unsigned int channel, bool on);
void aud3003x_usleep(unsigned int u_sec);
int aud3003x_acpm_read_reg(unsigned int slave, unsigned int reg, unsigned int *val);
int aud3003x_acpm_write_reg(unsigned int slave, unsigned int reg, unsigned int val);
int aud3003x_acpm_update_reg(unsigned int slave, unsigned int reg, unsigned int val, unsigned mask);
void i2c_client_change(struct aud3003x_priv *aud3003x, int client);
#ifdef CONFIG_SND_SOC_AUD3003X_HP_VTS
void aud3003x_hp_vts(struct aud3003x_priv *aud3003x, bool on);
#endif

/* Jack Functions */
bool aud3003x_notifier_check(void);
void aud3003x_call_notifier(void);
int aud3003x_jack_probe(struct snd_soc_component *codec);
int aud3003x_jack_remove(struct snd_soc_component *codec);
void reset_mic4_boost(struct aud3003x_jack *jackdet);

/*
 * Helper macros for creating bitmasks
 */
#define MASK(width, shift)	(((0x1 << (width)) - 1) << shift)

/*
 * Register Map
 */

/* Audio IRQ and Status */
#define AUD3003X_00_BASE_REG			0x00
#define AUD3003X_01_IRQ1PEND			0x01
#define AUD3003X_02_IRQ2PEND			0x02
#define AUD3003X_03_IRQ3PEND			0x03
#define AUD3003X_04_IRQ4PEND			0x04
#define AUD3003X_05_IRQ5PEND			0x05
#define AUD3003X_06_IRQ6PEND			0x06
#define AUD3003X_08_IRQ1M				0x08
#define AUD3003X_09_IRQ2M				0x09
#define AUD3003X_0A_IRQ3M				0x0A
#define AUD3003X_0B_IRQ4M				0x0B
#define AUD3003X_0C_IRQ5M				0x0C
#define AUD3003X_0D_IRQ6M				0x0D
#define AUD3003X_0E_IRQR1				0x0E
#define AUD3003X_0F_IRQR2				0x0F

/* Clock and Reset */
#define AUD3003X_10_CLKGATE0			0x10
#define AUD3003X_11_CLKGATE1			0x11
#define AUD3003X_12_CLKGATE2			0x12
#define AUD3003X_13_CLKGATE3			0x13
#define AUD3003X_14_RESETB0				0X14
#define AUD3003X_15_RESETB1				0x15
#define AUD3003X_16_CLK_MODE_SEL		0x16
#define AUD3003X_18_PWAUTO_AD			0x18
#define AUD3003X_19_PWAUTO_DA			0x19
#define AUD3003X_1B_DVS_CTRL			0X1B

/* Reserved for SW Operation */
#define AUD3003X_1E_CHOP1				0x1E
#define AUD3003X_1F_CHOP2				0x1F

/* Digital Audio Interface */
#define AUD3003X_20_IF_FORM1			0x20
#define AUD3003X_21_IF_FORM2			0x21
#define AUD3003X_22_IF_FORM3			0x22
#define AUD3003X_23_IF_FORM4			0x23
#define AUD3003X_24_IF_FORM5			0x24
#define AUD3003X_25_IF_LOOPBACK			0x25
#define AUD3003X_29_IF_FORM6			0x29
#define AUD3003X_2F_DMIC_ST				0x2F

/* Recording Path Digital Setting */
#define AUD3003X_30_ADC1				0x30
#define AUD3003X_31_ADC2				0x31
#define AUD3003X_32_ADC3				0x32
#define AUD3003X_33_ADC4				0x33
#define AUD3003X_34_AD_VOLL				0x34
#define AUD3003X_35_AD_VOLR				0x35
#define AUD3003X_36_AD_VOLC				0x36
#define AUD3003X_37_AD_HPF				0x37
#define AUD3003X_38_AD_TRIM1			0x38
#define AUD3003X_39_AD_TRIM2			0x39
#define AUD3003X_3D_AD_OFFSETL			0x3D
#define AUD3003X_3E_AD_OFFSETR			0x3E
#define AUD3003X_3F_AD_OFFSETC			0x3F

/* Playback Path Digital Setting */
#define AUD3003X_40_PLAY_MODE			0x40
#define AUD3003X_41_PLAY_VOLL			0x41
#define AUD3003X_42_PLAY_VOLR			0x42
#define AUD3003X_44_PLAY_MIX0			0x44
#define AUD3003X_46_PLAY_MIX2			0x46
#define AUD3003X_47_TRIM_DAC0			0x47
#define AUD3003X_48_TRIM_DAC1			0x48
#define AUD3003X_4B_OFFSET_CTR			0x4B

/* Adaptive Volume Control for Playback Path */
#define AUD3003X_50_AVC1				0x50
#define AUD3003X_53_AVC4				0x53
#define AUD3003X_54_AVC5				0x54
#define AUD3003X_55_AVC6				0x55
#define AUD3003X_56_AVC7				0x56
#define AUD3003X_57_AVC8				0x57
#define AUD3003X_58_AVC9				0X58
#define AUD3003X_5C_AVC13				0x5C
#define AUD3003X_5F_AVC16				0x5F
#define AUD3003X_61_AVC18				0x61
#define AUD3003X_63_AVC20				0x63
#define AUD3003X_68_AVC25				0x68
#define AUD3003X_71_AVC34				0x71
#define AUD3003X_72_AVC35				0x72
#define AUD3003X_73_AVC36				0x73
#define AUD3003X_74_AVC37				0x74
#define AUD3003X_77_AVC40				0x77
#define AUD3003X_7A_AVC43				0x7A
#define AUD3003X_7B_AVC44				0x7B
#define AUD3003X_7C_OCPCTRL0			0x7C
#define AUD3003X_7E_AVC47				0x7E
#define AUD3003X_7F_AVC48				0x7F

/* Interrupt Register for LV */
#define AUD3003X_80_ANA_INTR			0x80
#define AUD3003X_81_NOISE_INTR_POS		0x81
#define AUD3003X_82_I2S_INTR			0x82
#define AUD3003X_83_VTS_INTR_POS		0x83
#define AUD3003X_84_VTS_INTR_NEG		0x84
#define AUD3003X_85_ASEQ_INTR_POS		0x85
#define AUD3003X_86_ASEQ_INTR_NEG		0x86
#define AUD3003X_87_OCP_INTR_POS		0x87
#define AUD3003X_88_OCP_INTR_NEG		0x88
#define AUD3003X_89_ANA_INTR_MASK		0x89
#define AUD3003X_8A_NOISE_INTR_MASK		0x8A
#define AUD3003X_8B_I2S_INTR_MASK		0x8B
#define AUD3003X_8C_VTS_INTR_MASK		0x8C
#define AUD3003X_8D_ASEQ_INTR_MASK		0x8D
#define AUD3003X_8E_OCP_INTR_MASK		0x8E
#define AUD3003X_8F_NOISE_INTR_NEG		0x8F

/* DAC Digital DSM Control */
#define AUD3003X_93_DSM_CON1			0x93
#define AUD3003X_94_DSM_CON2			0x94
#define AUD3003X_95_DSM_CON3			0x95
#define AUD3003X_9A_DSM_BST_CON4		0x9A
#define AUD3003X_9D_AVC_DWA_OFF_THRES	0x9D
#define AUD3003X_9E_AVC_BTS_ON_THRES	0x9E

/* Auto SEQ - Detail Control */
#define AUD3003X_A0_AMU_CTR_CM1			0xA0
#define AUD3003X_A1_AMU_CTR_CM2			0xA1
#define AUD3003X_A2_AMU_CTR_CM3			0xA2
#define AUD3003X_A4_AMU_CTR_RCV1		0xA4
#define AUD3003X_A5_AMU_CTR_RCV2		0xA5
#define AUD3003X_A6_AMU_CTR_RCV3		0xA6
#define AUD3003X_A7_AMU_CTR_RCV4		0xA7
#define AUD3003X_A8_AMU_CTR_HP1			0xA8
#define AUD3003X_A9_AMU_CTR_HP2			0xA9
#define AUD3003X_AA_AMU_CTR_HP3			0xAA
#define AUD3003X_AB_AMU_CTR_HP4			0xAB
#define AUD3003X_AC_AMU_CTR_HP5			0xAC
#define AUD3003X_AD_AMU_CTR_HP6			0xAD
#define AUD3003X_B0_ODSEL1				0xB0
#define AUD3003X_B1_ODSEL2				0xB1
#define AUD3003X_B2_ODSEL3				0xB2
#define AUD3003X_B3_ODSEL4				0xB3
#define AUD3003X_B4_ODSEL5				0xB4
#define AUD3003X_B5_ODSEL6				0xB5
#define AUD3003X_B6_ODSEL7				0xB6
#define AUD3003X_B7_ODSEL8				0xB7
#define AUD3003X_B8_ODSEL9				0xB8
#define AUD3003X_B9_ODSEL10				0xB9

/* HP Management Unit Control */
#define AUD3003X_C0_ACTR_JD1			0xC0
#define AUD3003X_C1_ACTR_JD2			0xC1
#define AUD3003X_C2_ACTR_BTN			0xC2
#define AUD3003X_C3_ACTR_MCB1			0xC3
#define AUD3003X_C4_ACTR_MCB2			0xC4
#define AUD3003X_C5_ACTR_MCB3			0xC5
#define AUD3003X_C6_ACTR_MCB4			0xC6
#define AUD3003X_C7_ACTR_IMP1			0xC7
#define AUD3003X_C8_ACTR_IMP2			0xC8
#define AUD3003X_C9_ACTR_IMP3			0xC9
#define AUD3003X_CA_ACTR_IMP4			0xCA
#define AUD3003X_CB_ACTR_GP				0xCB
#define AUD3003X_CC_ACTR_DLDO			0xCC
#define AUD3003X_D0_DCTR_CM				0xD0
#define AUD3003X_D1_DCTR_TEST1			0xD1
#define AUD3003X_D2_DCTR_TEST2			0xD2
#define AUD3003X_D3_DCTR_TEST3			0xD3
#define AUD3003X_D4_DCTR_TEST4			0xD4
#define AUD3003X_D5_DCTR_TEST5			0xD5
#define AUD3003X_D6_DCTR_TEST6			0xD6
#define AUD3003X_D7_DCTR_TEST7			0xD7
#define AUD3003X_D8_DCTR_DBNC1			0xD8
#define AUD3003X_D9_DCTR_DBNC2			0xD9
#define AUD3003X_DA_DCTR_DBNC3			0xDA
#define AUD3003X_DB_DCTR_DBNC4			0xDB
#define AUD3003X_DC_DCTR_DBNC5			0xDC
#define AUD3003X_DD_DCTR_DBNC6			0xDD
#define AUD3003X_DE_DCTR_DLY1			0xDE
#define AUD3003X_DF_DCTR_DLY2			0xDF
#define AUD3003X_E0_DCTR_DLY3			0xE0
#define AUD3003X_E1_DCTR_DLY4			0xE1
#define AUD3003X_E2_DCTR_FSM1			0xE2
#define AUD3003X_E3_DCTR_FSM2			0xE3
#define AUD3003X_E4_DCTR_FSM3			0xE4
#define AUD3003X_E5_DCTR_FSM4			0xE5
#define AUD3003X_E6_DCTR_GP				0xE6
#define AUD3003X_E9_DCTR_IMP3			0xE9
#define AUD3003X_EA_DCTR_IMP4			0xEA
#define AUD3003X_EF_DCTR_CAL			0xEF
#define AUD3003X_F0_STATUS1				0xF0
#define AUD3003X_F1_STATUS2				0xF1
#define AUD3003X_F2_STATUS3				0xF2
#define AUD3003X_F3_STATUS4				0xF3
#define AUD3003X_F4_STATUS5				0xF4
#define AUD3003X_F5_STATUS6				0xF5
#define AUD3003X_F6_STATUS7				0xF6
#define AUD3003X_F7_STATUS8				0xF7
#define AUD3003X_F8_STATUS9				0xF8
#define AUD3003X_F9_STATUS10			0xF9
#define AUD3003X_FA_STATUS11			0xFA
#define AUD3003X_FB_STATUS12			0xFB
#define AUD3003X_FC_STATUS13			0xFC

/* Analog REF, CP, VTS-ADC Control */
#define AUD3003X_102_REF_CTRL1			0x02
#define AUD3003X_103_REF_CTRL2			0x03
#define AUD3003X_104_CTRL_CP			0x04
#define AUD3003X_108_PD_VTS				0x08
#define AUD3003X_10A_CTRL_VTS2			0x0A
#define AUD3003X_10B_CTRL_VTS3			0x0B
#define AUD3003X_10C_CTRL_VTS4			0x0C
#define AUD3003X_10D_CTRL_VTS5			0x0D

/* Analog Recording Path Control */
#define AUD3003X_110_BST_PDB			0x10
#define AUD3003X_111_BST1				0x11
#define AUD3003X_112_BST2				0x12
#define AUD3003X_113_BST3				0x13
#define AUD3003X_114_BST4				0x14
#define AUD3003X_115_DSM1				0x15
#define AUD3003X_117_DSM2				0x17
#define AUD3003X_119_DSM3				0x19
#define AUD3003X_11B_DSMC				0x1B
#define AUD3003X_11C_BSTC				0x1C
#define AUD3003X_11D_BST_OP				0x1D
#define AUD3003X_11E_CTRL_MIC_I1		0x1E
#define AUD3003X_11F_CTRL_MIC_I2		0x1F
#define AUD3003X_120_CTRL_MIC_I3		0x20
#define AUD3003X_121_CTRL_MIC_I4		0x21
#define AUD3003X_122_BST4PN				0x22
#define AUD3003X_123_MIC_CLK_CTRL		0x23
#define AUD3003X_124_AUTO_DW			0x24
#define AUD3003X_125_DC_OFFSET_ON		0x25

/* Analog Playback Path Control */
#define AUD3003X_130_PD_IDAC1			0x30
#define AUD3003X_131_PD_IDAC2			0x31
#define AUD3003X_135_CLK_CTRL			0x35
#define AUD3003X_138_PD_HP				0x38
#define AUD3003X_139_PD_SURGE			0x39
#define AUD3003X_13A_POP_HP				0x3A
#define AUD3003X_13B_OCP_HP				0x3B
#define AUD3003X_13F_CT_HPL				0x3F
#define AUD3003X_140_CT_HPR				0x40
#define AUD3003X_142_CTRL_OVP0			0x42
#define AUD3003X_143_CTRL_OVP1			0x43
#define AUD3003X_144_CTRL_OVP2			0x44
#define AUD3003X_145_CTRL_OVP3			0x45
#define AUD3003X_149_PD_EP				0x49
#define AUD3003X_14C_EP_AVOL			0x4C

/* Analog Clock Control */
#define AUD3003X_150_ADC_CLK0			0x50
#define AUD3003X_151_ADC_CLK1			0x51
#define AUD3003X_153_DA_CP0				0x53
#define AUD3003X_154_DA_CP1				0x54
#define AUD3003X_155_DA_CP2				0x55
#define AUD3003X_156_DA_CP3				0x56

/* Analog Read Register */
#define AUD3003X_180_READ_ON0			0x80
#define AUD3003X_181_READ_ON1			0x81
#define AUD3003X_182_READ_ON2			0x82
#define AUD3003X_183_READ_ON3			0x83
#define AUD3003X_184_READ_ON4			0x84
#define AUD3003X_185_READ_ON5			0x85
#define AUD3003X_186_READ_ON6			0x86
#define AUD3003X_187_READ_ON7			0x87
#define AUD3003X_188_READ_ON8			0x88
#define AUD3003X_189_READ_ON9			0x89
#define AUD3003X_18A_READ_ON10			0x8A

/* OTP Register for Offset Calibarion */
#define AUD3003X_200_HP_OFFSET_L0		0x00
#define AUD3003X_207_HP_OFFSET_L7		0x07
#define AUD3003X_21D_HP_OFFSET_R7		0x1D
#define AUD3003X_244_HPLOFF_S_2			0x44
#define AUD3003X_247_HPROFF_S_2			0x47
#define AUD3003X_253_EP_OFFMSK_3		0x53

/* OTP Register for Analog */
#define AUD3003X_2A8_CTRL_IREF1			0xA8
#define AUD3003X_2AB_CTRL_ADC1			0xAB
#define AUD3003X_2AC_CTRL_ADC2			0xAC
#define AUD3003X_2AD_CTRL_ADC3			0xAD
#define AUD3003X_2AE_HP_DSM_OFFSETL		0xAE
#define AUD3003X_2AF_HP_DSM_OFFSETR		0xAF
#define AUD3003X_2B0_DSM_OFFSETL		0xB0
#define AUD3003X_2B1_DSM_OFFSETR		0xB1
#define AUD3003X_2B3_CTRL_CP4			0XB3
#define AUD3003X_2B4_CTRL_HP0			0xB4
#define AUD3003X_2B5_CTRL_HP1			0xB5
#define AUD3003X_2B7_CTRL_EP0			0xB7
#define AUD3003X_2B9_CTRL_LDO			0xB9
#define AUD3003X_2BB_CTRL_IDAC0_OTP		0xBB
#define AUD3003X_2BC_CTRL_IDAC1_OTP		0xBC
#define AUD3003X_2BD_CTRL_IDAC2_OTP		0xBD
#define AUD3003x_2BE_EP_DSM_OFFSETL		0xBE
#define AUD3003X_2BF_EP_DSM_OFFSETR		0xBF

/* COMMON Register */
#define AUD3003X_007_IRQM				0x07

/* CLOSE Register */
#define AUD3003X_F59_ETC_OTP3			0x59
#define AUD3003X_F63_WTP_ADC1			0x63
#define AUD3003X_F64_WTP_ADC2			0x64
#define AUD3003X_F65_WTP_ADC3			0x65
#define AUD3003X_F67_OTP_ADC2			0x67
#define AUD3003X_F68_OTP_ADC3			0x68
#define AUD3003X_F69_OTP_ADC4			0x69
#define AUD3003X_F6A_OTP_ADC5			0x6A

/* AUD3003X_01_IRQ1PEND */
#define ST_JACKIN_R					BIT(7)
#define ST_JACKOUT_R				BIT(6)
#define ST_APCHECK_R				BIT(5)
#define ST_WTJACKIN_R				BIT(4)
#define ST_WTJACKOUT_R				BIT(3)
#define ST_MOIST_R					BIT(2)
#define ST_ANT_JACKOUT_R			BIT(1)
#define JACK_DET_R					BIT(0)

/* AUD3003X_02_IRQ2PEND */
#define ST_JACKIN_F					BIT(7)
#define ST_JACKOUT_F				BIT(6)
#define ST_APCHECK_F				BIT(5)
#define ST_WTJACKIN_F				BIT(4)
#define ST_WTJACKOUT_F				BIT(3)
#define ST_MOIST_F					BIT(2)
#define ST_ANT_JACKOUT_F			BIT(1)
#define JACK_DET_F					BIT(0)

/* AUD3003X_03_IRQ3PEND */
#define ST_POLE_R					BIT(5)
#define IMP_CHECK_DONE_R			BIT(4)
#define ANT_MDET_R					BIT(3)
#define ANT_MDET2_R					BIT(2)
#define ANT_LDET_R					BIT(1)
#define BTN_DET_R					BIT(0)

/* AUD3003X_04_IRQ4PEND */
#define IMP_CHECK_DONE_F			BIT(5)
#define ST_POLE_F					BIT(4)
#define ANT_MDET_F					BIT(3)
#define ANT_MDET2_F					BIT(2)
#define ANT_LDET_F					BIT(1)
#define BTN_DET_F					BIT(0)

/* AUD3003X_05_IRQ5PEND */
#define OVP_MUTEL_R					BIT(3)
#define OVP_MUTER_R					BIT(2)

/* AUD3003X_06_IRQ6PEND */
#define OVP_MUTEL_F					BIT(3)
#define OVP_MUTER_F					BIT(2)

/* AUD3003X_08_IRQ1M */
#define ST_JACKIN_R_M_SHIFT			7
#define ST_JACKIN_R_M_MASK			BIT(ST_JACKIN_R_M_SHIFT)

#define ST_JACKOUT_R_M_SHIFT		6
#define ST_JACKOUT_R_M_MASK			BIT(ST_JACKOUT_R_M_SHIFT)

#define ST_APCHECK_R_M_SHIFT		5
#define ST_APCHECK_R_M_MASK			BIT(ST_APCHECK_R_M_SHIFT)

#define ST_WTJACKIN_R_M_SHIFT		4
#define ST_WTJACKIN_R_M_MASK		BIT(ST_WTJACKIN_R_M_SHIFT)

#define ST_WTJACKOUT_R_M_SHIFT		3
#define ST_WTJACKOUT_R_M_MASK		BIT(ST_WTJACKOUT_R_M_SHIFT)

#define ST_MOIST_R_M_SHIFT			2
#define ST_MOIST_R_M_MASK			BIT(ST_MOIST_R_M_SHIFT)

#define ANT_JACKOUT_R_M_SHIFT		1
#define ANT_JACKOUT_R_M_MASK		BIT(ANT_JACKOUT_R_M_SHIFT)

#define JACK_DET_R_M_SHIFT			0
#define JACK_DET_R_M_MASK			BIT(JACK_DET_R_M_SHIFT)

#define IRQ1M_MASK_ALL				0xFF

/* AUD3003X_09_IRQ2M */
#define ST_JACKIN_F_M_SHIFT			7
#define ST_JACKIN_F_M_MASK			BIT(ST_JACKIN_F_M_SHIFT)

#define ST_JACKOUT_F_M_SHIFT		6
#define ST_JACKOUT_F_M_MASK			BIT(ST_JACKOUT_F_M_SHIFT)

#define ST_APCHECK_F_M_SHIFT		5
#define ST_APCHECK_F_M_MASK			BIT(ST_APCHECK_F_M_SHIFT)

#define ST_WTJACKIN_F_M_SHIFT		4
#define ST_WTJACKIN_F_M_MASK		BIT(ST_WTJACKIN_F_M_SHIFT)

#define ST_WTJACKOUT_F_M_SHIFT		3
#define ST_WTJACKOUT_F_M_MASK		BIT(ST_WTJACKOUT_F_M_SHIFT)

#define ST_MOIST_F_M_SHIFT			2
#define ST_MOIST_F_M_MASK			BIT(ST_MOIST_F_M_SHIFT)

#define ANT_JACKOUT_F_M_SHIFT		1
#define ANT_JACKOUT_F_M_MASK		BIT(ANT_JACKOUT_F_M_SHIFT)

#define JACK_DET_F_M_SHIFT			0
#define JACK_DET_F_M_MASK			BIT(JACK_DET_F_M_SHIFT)

#define IRQ2M_MASK_ALL				0xFF

/* AUD3003X_0A_IRQ3M */
#define IMP_CHECK_DONE_R_M_SHIFT	5
#define IMP_CHECK_DONE_R_M_MASK		BIT(IMP_CHECK_DONE_R_M_SHIFT)

#define ST_POLE_R_SHIFT				4
#define ST_POLE_R_MASK				BIT(ST_POLE_R_SHIFT)

#define ANT_MDET_R_M_SHIFT			3
#define ANT_MDET_R_M_MASK			BIT(ANT_MDET_R_M_SHIFT)

#define ANT_MDET2_R_M_SHIFT			2
#define ANT_MDET2_R_M_MASK			BIT(ANT_MDET2_R_M_SHIFT)

#define ANT_LDET_R_M_SHIFT			1
#define ANT_LDET_R_M_MASK			BIT(ANT_LDET_R_M_SHIFT)

#define BTN_DET_R_M_SHIFT			0
#define BTN_DET_R_M_MASK			BIT(BTN_DET_R_M_SHIFT)

#define IRQ3M_MASK_ALL				0x3F

/* AUD3003X_0B_IRQ4M */
#define IMP_CHECK_DONE_F_M_SHIFT	5
#define IMP_CHECK_DONE_F_M_MASK		BIT(IMP_CHECK_DONE_F_M_SHIFT)

#define ST_POLE_F_SHIFT				4
#define ST_POLE_F_MASK				BIT(ST_POLE_F_SHIFT)

#define ANT_MDET_F_M_SHIFT			3
#define ANT_MDET_F_M_MASK			BIT(ANT_MDET_F_M_SHIFT)

#define ANT_MDET2_F_M_SHIFT			2
#define ANT_MDET2_F_M_MASK			BIT(ANT_MDET2_F_M_SHIFT)

#define ANT_LDET_F_M_SHIFT			1
#define ANT_LDET_F_M_MASK			BIT(ANT_LDET_F_M_SHIFT)

#define BTN_DET_F_M_SHIFT			0
#define BTN_DET_F_M_MASK			BIT(BTN_DET_F_M_SHIFT)

#define IRQ4M_MASK_ALL				0x3F

/* AUD3003X_10_CLKGATE0 */
#define OVP_CLK_GATE_SHIFT			6
#define OVP_CLK_GATE_MASK			BIT(OVP_CLK_GATE_SHIFT)

#define SEQ_CLK_GATE_SHIFT			5
#define SEQ_CLK_GATE_MASK			BIT(SEQ_CLK_GATE_SHIFT)

#define AVC_CLK_GATE_SHIFT			4
#define AVC_CLK_GATE_MASK			BIT(AVC_CLK_GATE_SHIFT)

#define DMIC_CLK_GATE_SHIFT			3
#define DMIC_CLK_GATE_MASK			BIT(DMIC_CLK_GATE_SHIFT)

#define ADC_CLK_GATE_SHIFT			2
#define ADC_CLK_GATE_MASK			BIT(ADC_CLK_GATE_SHIFT)

#define DAC_CLK_GATE_SHIFT			1
#define DAC_CLK_GATE_MASK			BIT(DAC_CLK_GATE_SHIFT)

#define COM_CLK_GATE_SHIFT			0
#define COM_CLK_GATE_MASK			BIT(COM_CLK_GATE_SHIFT)

#define CLKGATE0_ENABLE				1
#define CLKGATE0_DISABLE			0

/* AUD3003X_11_CLKGATE1 */
#define DSML_CLK_GATE_SHIFT			6
#define DSML_CLK_GATE_MASK			BIT(DSML_CLK_GATE_SHIFT)

#define DSMR_CLK_GATE_SHIFT			5
#define DSMR_CLK_GATE_MASK			BIT(DSMR_CLK_GATE_SHIFT)

#define DAC_CIC_CGL_SHIFT			2
#define DAC_CIC_CGL_MASK			BIT(DAC_CIC_CGL_SHIFT)

#define DAC_CIC_CGR_SHIFT			1
#define DAC_CIC_CGR_MASK			BIT(DAC_CIC_CGR_SHIFT)

#define CLKGATE1_ENABLE				1
#define CLKGATE1_DISABLE			0

/* AUD3003X_12_CLKGATE2 */
#define CED_CLK_GATE_SHIFT			5
#define CED_CLK_GATE_MASK			BIT(CED_CLK_GATE_SHIFT)

#define VTS_CLK_GATE_SHIFT			4
#define VTS_CLK_GATE_MASK			BIT(VTS_CLK_GATE_SHIFT)

#define ADC_CIC_CGL_SHIFT			2
#define ADC_CIC_CGL_MASK			BIT(ADC_CIC_CGL_SHIFT)

#define ADC_CIC_CGR_SHIFT			1
#define ADC_CIC_CGR_MASK			BIT(ADC_CIC_CGR_SHIFT)

#define ADC_CIC_CGC_SHIFT			0
#define ADC_CIC_CGC_MASK			BIT(ADC_CIC_CGC_SHIFT)

#define CLKGATE2_ENABLE				1
#define CLKGATE2_DISABLE			0

/* AUD3003X_14_RESETB0 */
#define AVC_RESETB_SHIFT			7
#define AVC_RESETB_MASK				BIT(AVC_RESETB_SHIFT)

#define ENOF_RESETDAC_SHIFT			6
#define ENOF_RESETDAC_MASK			BIT(ENOF_RESETDAC_SHIFT)

#define RSTB_ADC_SHIFT				5
#define RSTB_ADC_MASK				BIT(RSTB_ADC_SHIFT)

#define RSTB_DAC_DSM_SHIFT			4
#define RSTB_DAC_DSM_MASK			BIT(RSTB_DAC_DSM_SHIFT)

#define ADC_RESETB_SHIFT			3
#define ADC_RESETB_MASK				BIT(ADC_RESETB_SHIFT)

#define DAC_RESETB_SHIFT			2
#define DAC_RESETB_MASK				BIT(DAC_RESETB_SHIFT)

#define CORE_RESETB_SHIFT			1
#define CORE_RESETB_MASK			BIT(CORE_RESETB_SHIFT)

#define SYSTEM_RESET_SHIFT			0
#define SYSTEM_RESET_MASK			BIT(SYSTEM_RESET_SHIFT)

#define RESETB0_NORMAL				1
#define RESETB0_RESET				0

/* AUD3003X_15_RESETB1 */
#define VTS_RESETB_SHIFT			0
#define VTS_RESETB_MASK				BIT(VTS_RESETB_SHIFT)

#define RESETB1_NORMAL				1
#define RESETB1_RESET				0

/* AUD3003X_16_CLK_MODE_SEL */
#define ADC_FSEL_SHIFT				4
#define ADC_FSEL_WIDTH				2
#define ADC_FSEL_MASK				MASK(ADC_FSEL_WIDTH, ADC_FSEL_SHIFT)

#define CLK_MODE_STEREO				0
#define CLK_MODE_TRIPLE				1
#define CLK_MODE_MONO				2

#define DAC_DSEL_SHIFT				2
#define DAC_DSEL_WIDTH				2
#define DAC_DSEL_MASK				MASK(DAC_DSEL_WIDTH, DAC_DSEL_SHIFT)

#define DSM_DSEL_128FS				0
#define DSM_DSEL_64FS				1

#define DAC_FSEL_SHIFT				1
#define DAC_FSEL_MASK				BIT(DAC_FSEL_SHIFT)

#define CLK_DAC_48K					0
#define CLK_DAC_192_384K			1

#define AVC_CLK_SEL_SHIFT			0
#define AVC_CLK_SEL_MASK			BIT(AVC_CLK_SEL_SHIFT)

#define CLK_AVC_48_192K				0
#define CLK_AVC_384K				1

/* AUD3003X_18_PWAUTO_AD */
#define APW_VTS_SHIFT				4
#define APW_VTS_MASK				BIT(APW_VTS_SHIFT)

#define APW_MIC1L_SHIFT				3
#define APW_MIC1L_MASK				BIT(APW_MIC1L_SHIFT)

#define APW_MIC2C_SHIFT				2
#define APW_MIC2C_MASK				BIT(APW_MIC2C_SHIFT)

#define APW_MIC3R_SHIFT				1
#define APW_MIC3R_MASK				BIT(APW_MIC3R_SHIFT)

#define APW_MIC4R_SHIFT				0
#define APW_MIC4R_MASK				BIT(APW_MIC4R_SHIFT)

#define AD_APW_ENABLE				1
#define AD_APW_DISABLE				0

/* AUD3003X_19_PWAUTO_DA */
#define FAST_CHG_DA_SHIFT			4
#define FAST_CHG_DA_WIDTH			2
#define FAST_CHG_DA_MASK			MASK(FAST_CHG_DA_WIDTH, FAST_CHG_DA_SHIFT)

#define FAST_CHG_DEFAULT			0
#define FAST_CHG_MAX				1
#define FAST_CHG_SHORTEST			2

#define APW_HP_SHIFT				1
#define APW_HP_MASK					BIT(APW_HP_SHIFT)

#define APW_RCV_SHIFT				0
#define APW_RCV_MASK				BIT(APW_RCV_SHIFT)

#define DA_APW_ENABLE				1
#define DA_APW_DISABLE				0

/* AUD3003X_1B_DVS_CTRL */
#define DVS_MODE_SHIFT				6
#define DVS_MODE_WIDTH				2
#define DVS_MODE_MASK				MASK(DVS_MODE_WIDTH, DVS_MODE_SHIFT)

#define DVS_MODE_0					0
#define DVS_MODE_1					1
#define DVS_MODE_2					2
#define DVS_MODE_3					3

#define MUTE_DLDO_CTRL_SHIFT		3
#define MUTE_DLDO_CTRL_WIDTH		3
#define MUTE_DLDO_CTRL_MASK			MASK(MUTE_DLDO_CTRL_WIDTH, MUTE_DLDO_CTRL_SHIFT)

#define ON_DLDO_CTRL_SHIFT			0
#define ON_DLDO_CTRL_WIDTH			3
#define ON_DLDO_CTRL_MASK			MASK(ON_DLDO_CTRL_WIDTH, ON_DLDO_CTRL_SHIFT)

/* AUD3003X_1E_CHOP1 */
#define HP_ON_SHIFT					7
#define HP_ON_MASK					BIT(HP_ON_SHIFT)

#define EP_ON_SHIFT					6
#define EP_ON_MASK					BIT(EP_ON_SHIFT)

#define DMIC2_ON_SHIFT				5
#define DMIC2_ON_MASK				BIT(DMIC2_ON_SHIFT)

#define DMIC1_ON_SHIFT				4
#define DMIC1_ON_MASK				BIT(DMIC1_ON_SHIFT)

#define DMIC_ON_SHIFT				4
#define DMIC_ON_WIDTH				2
#define DMIC_ON_MASK				MASK(DMIC_ON_WIDTH, DMIC_ON_SHIFT)

#define MIC4_ON_SHIFT				3
#define MIC4_ON_MASK				BIT(MIC4_ON_SHIFT)

#define MIC3_ON_SHIFT				2
#define MIC3_ON_MASK				BIT(MIC3_ON_SHIFT)

#define MIC2_ON_SHIFT				1
#define MIC2_ON_MASK				BIT(MIC2_ON_SHIFT)

#define MIC1_ON_SHIFT				0
#define MIC1_ON_MASK				BIT(MIC1_ON_SHIFT)

#define AMIC_ON_SHIFT				0
#define AMIC_ON_WIDTH				4
#define AMIC_ON_MASK				MASK(AMIC_ON_WIDTH, AMIC_ON_SHIFT)

/* AUD3003X_20_IF_FORM1 */
#define I2S_DF_SHIFT				4
#define I2S_DF_WIDTH				3
#define I2S_DF_MASK					MASK(I2S_DF_WIDTH, I2S_DF_SHIFT)

#define BCK_POL_SHIFT				1
#define BCK_POL_MASK				BIT(BCK_POL_SHIFT)

#define LRCK_POL_SHIFT				0
#define LRCK_POL_MASK				BIT(LRCK_POL_SHIFT)

/* AUD3003X_21_IF_FORM2 */
#define I2S_DL_SHIFT				0
#define I2S_DL_WIDTH				6
#define I2S_DL_MASK					MASK(I2S_DL_WIDTH, I2S_DL_SHIFT)

#define I2S_DL_16					0x10
#define I2S_DL_20					0x14
#define I2S_DL_24					0x18
#define I2S_DL_32					0x20

/* AUD3003X_22_IF_FORM3 */
#define I2S_XFS_SHIFT				0
#define I2S_XFS_WIDTH				8
#define I2S_XFS_MASK				MASK(I2S_XFS_WIDTH, I2S_XFS_SHIFT)

#define I2S_XFS_32					0x20
#define I2S_XFS_64					0x40

/* AUD3003X_23_IF_FORM4 */
#define SEL_ADC3_SHIFT				6
#define SEL_ADC3_WIDTH				2
#define SEL_ADC3_MASK				MASK(SEL_ADC3_WIDTH, SEL_ADC3_SHIFT)

#define SEL_ADC2_SHIFT				4
#define SEL_ADC2_WIDTH				2
#define SEL_ADC2_MASK				MASK(SEL_ADC2_WIDTH, SEL_ADC2_SHIFT)

#define SEL_ADC1_SHIFT				2
#define SEL_ADC1_WIDTH				2
#define SEL_ADC1_MASK				MASK(SEL_ADC1_WIDTH, SEL_ADC1_SHIFT)

#define SEL_ADC0_SHIFT				0
#define SEL_ADC0_WIDTH				2
#define SEL_ADC0_MASK				MASK(SEL_ADC0_WIDTH, SEL_ADC0_SHIFT)

/* AUD3003X_24_IF_FORM5 */
#define SDIN_TIE0_SHIFT				7
#define SDIN_TIE0_MASK				BIT(SDIN_TIE0_SHIFT)

#define SDOUT_TIE0_SHIFT			6
#define SDOUT_TIE0_MASK				BIT(SDOUT_TIE0_SHIFT)

#define SEL_DAC1_SHIFT				4
#define SEL_DAC1_WIDTH				2
#define SEL_DAC1_MASK				MASK(SEL_DAC1_WIDTH, SEL_DAC1_SHIFT)

#define SEL_DAC0_SHIFT				0
#define SEL_DAC0_WIDTH				2
#define SEL_DAC0_MASK				MASK(SEL_DAC0_WIDTH, SEL_DAC0_SHIFT)

#define DAC_I2S_CH0					0
#define DAC_I2S_CH1					1
#define DAC_I2S_CH2					2
#define DAC_I2S_CH3					3

/* AUD3003X_29_IF_FORM6 */
#define ADC_OUT_FORMAT_SEL_SHIFT	0
#define ADC_OUT_FORMAT_SEL_WIDTH	3
#define ADC_OUT_FORMAT_SEL_MASK		MASK(ADC_OUT_FORMAT_SEL_WIDTH, ADC_OUT_FORMAT_SEL_SHIFT)

#define ADC_FM_48K_AT_48K			0
#define ADC_FM_192K_AT_192K			1
#define ADC_FM_48K_ZP_AT_192K		2
#define ADC_FM_48K_4COPY_AT_192K	3
#define ADC_FM_192K_ZP_AT_384K		4
#define ADC_FM_192K_2COPY_AT_384K	5
#define ADC_FM_48K_ZP_AT_384K		6
#define ADC_FM_48K_8COPY_AT_384K	7

/* AUD3003X_2F_DMIC_ST */
#define VTS_DATA_ENB_SHIFT			4
#define VTS_DATA_ENB_MASK			BIT(VTS_DATA_ENB_SHIFT)

#define DMIC_ST_SHIFT				0
#define DMIC_ST_WIDTH				2
#define DMIC_ST_MASK				MASK(DMIC_ST_WIDTH, DMIC_ST_SHIFT)

#define DMIC_IO_ST_1				0
#define DMIC_IO_ST_2				1
#define DMIC_IO_ST_3				2
#define DMIC_IO_ST_4				3

/* AUD3003X_30_ADC1 */
#define FS_SEL_SHIFT				6
#define FS_SEL_MASK					BIT(FS_SEL_SHIFT)

#define FS_NORMAL_48K				0
#define FS_UHQA_192K				1

#define CH_MODE_SHIFT				4
#define CH_MODE_WIDTH				2
#define CH_MODE_MASK				MASK(CH_MODE_WIDTH, CH_MODE_SHIFT)

#define ADC_CH_STEREO				0
#define ADC_CH_MONO					1
#define ADC_CH_TRIPLE				2

#define MU_TYPE_SHIFT				3
#define MU_TYPE_MASK				BIT(MU_TYPE_SHIFT)

#define ADC_MUTEL_SHIFT				2
#define ADC_MUTEL_MASK				BIT(ADC_MUTEL_SHIFT)

#define ADC_MUTER_SHIFT				1
#define ADC_MUTER_MASK				BIT(ADC_MUTER_SHIFT)

#define ADC_MUTEC_SHIFT				0
#define ADC_MUTEC_MASK				BIT(ADC_MUTEC_SHIFT)

#define ADC_MUTE_DISABLE			0
#define ADC_MUTE_ENABLE				1
#define ADC_MUTE_ALL				7

/* AUD3003X_31_ADC2 */
#define DMIC_POL_SHIFT				7
#define DMIC_POL_MASK				BIT(DMIC_POL_SHIFT)

#define INP_SEL_R_SHIFT				4
#define INP_SEL_R_WIDTH				3
#define INP_SEL_R_MASK				MASK(INP_SEL_R_WIDTH, INP_SEL_R_SHIFT)

#define EN_DMIC_SHIFT				3
#define EN_DMIC_MASK				BIT(EN_DMIC_SHIFT)

#define DMIC_DISABLE				0
#define DMIC_ENABLE					1

#define INP_SEL_L_SHIFT				0
#define INP_SEL_L_WIDTH				3
#define INP_SEL_L_MASK				MASK(INP_SEL_L_WIDTH, INP_SEL_L_SHIFT)

/* AUD3003X_32_ADC3 */
#define DMIC_CLK_ZTIE_SHIFT			7
#define DMIC_CLK_ZTIE_MASK			BIT(DMIC_CLK_ZTIE_SHIFT)

#define DMIC_GAIN_PRE_SHIFT			4
#define DMIC_GAIN_PRE_WIDTH			3
#define DMIC_GAIN_PRE_MASK			MASK(DMIC_GAIN_PRE_WIDTH, DMIC_GAIN_PRE_SHIFT)

#define DMIC_GAIN_1					0
#define DMIC_GAIN_3					1
#define DMIC_GAIN_5					2
#define DMIC_GAIN_7					3
#define DMIC_GAIN_9					4
#define DMIC_GAIN_11				5
#define DMIC_GAIN_13				6
#define DMIC_GAIN_15				7

#define INP_SEL_C_SHIFT				0
#define INP_SEL_C_WIDTH				3
#define INP_SEL_C_MASK				MASK(INP_SEL_C_WIDTH, INP_SEL_C_SHIFT)

/* AUD3003X_33_ADC4 */
#define DMIC_EN2_SHIFT				7
#define DMIC_EN2_MASK				BIT(DMIC_EN2_SHIFT)

#define DMIC_EN1_SHIFT				6
#define DMIC_EN1_MASK				BIT(DMIC_EN1_SHIFT)

#define CP_TYPE_SEL_SHIFT			2
#define CP_TYPE_SEL_WIDTH			3
#define CP_TYPE_SEL_MASK			MASK(CP_TYPE_SEL_WIDTH, CP_TYPE_SEL_SHIFT)

#define FILTER_TYPE_NORMAL_AMIC		0
#define FILTER_TYPE_UHQA_W_LP_AMIC	1
#define FILTER_TYPE_UHQA_WO_LP_AMIC	2
#define FILTER_TYPE_NORMAL_DMIC		4
#define FILTER_TYPE_UHQA_WO_LP_DMIC	5
#define FILTER_TYPE_BYPASS_COMP		6

#define DMIC_OSR_SHIFT				0
#define DMIC_OSR_WIDTH				2
#define DMIC_OSR_MASK				MASK(DMIC_OSR_WIDTH, DMIC_OSR_SHIFT)

#define DMIC_OSR_NO					0
#define DMIC_OSR_64					1
#define DMIC_OSR_32					2

/*
 * AUD3003X_34_AD_VOLL
 * AUD3003X_35_AD_VOLR
 * AUD3003X_36_AD_VOLC
 */
#define DVOL_ADC_SHIFT				0
#define DVOL_ADC_WIDTH				8
#define DVOL_ADC_MASK				MASK(DVOL_ADC_WIDTH, DVOL_ADC_SHIFT)

#define ADC_DVOL_MAXNUM				0xE5

/* AUD3003X_37_AD_HPF */
#define HPF_SEL_SHIFT				4
#define HPF_SEL_WIDTH				2
#define HPF_SEL_MASK				MASK(HPF_SEL_WIDTH, HPF_SEL_SHIFT)

#define HPF_15_15HZ					0
#define HPF_33_31HZ					1
#define HPF_60_61HZ					2
#define HPF_113_117HZ				3

#define HPF_ORDER_SHIFT				3
#define HPF_ORDER_MASK				BIT(HPF_ORDER_SHIFT)

#define HPF_ORDER_2ND				0
#define HPF_ORDER_1ST				1

#define HPF_ENL_SHIFT				2
#define HPF_ENL_MASK				BIT(HPF_ENL_SHIFT)

#define HPF_ENR_SHIFT				1
#define HPF_ENR_MASK				BIT(HPF_ENR_SHIFT)

#define HPF_ENC_SHIFT				0
#define HPF_ENC_MASK				BIT(HPF_ENC_SHIFT)

#define HPF_DISABLE					0
#define HPF_ENABLE					1

/* AUD3003X_40_PLAY_MODE */
#define PLAY_MODE_SEL_SHIFT			4
#define PLAY_MODE_SEL_WIDTH			3
#define PLAY_MODE_SEL_MASK			MASK(PLAY_MODE_SEL_WIDTH, PLAY_MODE_SEL_SHIFT)

#define DAC_FREQ_48K				0
#define DAC_FREQ_192K				4
#define DAC_FREQ_384K				5

#define DSM_RATE_SEL_SHIFT			2
#define DSM_RATE_SEL_WIDTH			2
#define DSM_RATE_SEL_MASK			MASK(DSM_RATE_SEL_WIDTH, DSM_RATE_SEL_SHIFT)

#define DSM_RATE_128FS				0
#define DSM_RATE_64FS				1

#define DA_SMUTEL_SHIFT				1
#define DA_SMUTEL_MASK				BIT(DA_SMUTEL_SHIFT)

#define DA_SMUTER_SHIFT				0
#define DA_SMUTER_MASK				BIT(DA_SMUTER_SHIFT)

#define DAC_MUTE_DISABLE			0
#define DAC_MUTE_ENABLE				1
#define DAC_MUTE_ALL				3

/*
 * AUD3003X_41_PLAY_VOLL
 * AUD3003X_42_PLAY_VOLR
 */
#define DVOL_DA_SHIFT				0
#define DVOL_DA_WIDTH				8
#define DVOL_DA_MASK				MASK(DVOL_DA_WIDTH, DVOL_DA_SHIFT)

#define DAC_DVOL_MAXNUM				0x00
#define DAC_DVOL_DEFAULT			0x54
#define DAC_DVOL_MINNUM				0xEA

/* AUD3003X_44_PLAY_MIX0 */
#define EP_MODE_SHIFT				7
#define EP_MODE_MASK				BIT(EP_MODE_SHIFT)

#define EP_MODE_ENABLE				1
#define EP_MODE_DISABLE				0

#define DAC_MIXL_SHIFT				4
#define DAC_MIXL_WIDTH				3
#define DAC_MIXL_MASK				MASK(DAC_MIXL_WIDTH, DAC_MIXL_SHIFT)

#define DACL_DATAL					0
#define DACL_LR_BY_2_MONO			1
#define DACL_LR_MONO				2
#define DACL_LR_BY_2_POL_CH			3
#define DACL_LR_POL_CH				4
#define DACL_ZERO					5
#define DACL_DATAL_POL_CH			6
#define DACL_DATAR_POL_CH			7

#define DAC_MIXR_SHIFT				0
#define DAC_MIXR_WIDTH				3
#define DAC_MIXR_MASK				MASK(DAC_MIXR_WIDTH, DAC_MIXR_SHIFT)

#define DACR_DATAR					0
#define DACR_LR_BY_2_MONO			1
#define DACR_LR_MONO				2
#define DACR_LR_BY_2_POL_CH			3
#define DACR_LR_POL_CH				4
#define DACR_ZERO					5
#define DACR_DATAR_POL_CH			6
#define DACR_DATAL_POL_CH			7

/* AUD3003X_46_PLAY_MIX2 */
#define DAC_GAIN_TRIM_46_SHIFT		7
#define DAC_GAIN_TRIM_46_MASK		BIT(DAC_GAIN_TRIM_SHIFT)

/* AUD3003X_47_TRIM_DAC0 */
#define DAC_GAIN_TRIM_47_SHIFT		0
#define DAC_GAIN_TRIM_47_WIDTH		8
#define DAC_GAIN_TRIM_47_MASK		MASK(DAC_GAIN_TRIM_47_WIDTH, DAC_GAIN_TRIM_47_SHIFT)

/* AUD3003X_48_TRIM_DAC1 */
#define DAC_GAIN_TRIM_48_SHIFT		0
#define DAC_GAIN_TRIM_48_WIDTH		8
#define DAC_GAIN_TRIM_48_MASK		MASK(DAC_GAIN_TRIM_48_WIDTH, DAC_GAIN_TRIM_48_SHIFT)

#define DAC_GAIN_TRIM_48_48K		0x4F
#define DAC_GAIN_TRIM_48_384K		0x12
#define DAC_GAIN_TRIM_48_192K		0x1E

/* AUD3003X_4B_DWA_CTR */
#define OFFSET_RNGL_SHIFT			6
#define OFFSET_RNGL_MASK			BIT(OFFSET_RNGL_SHIFT)

#define OFFSET_RNGR_SHIFT			5
#define OFFSET_RNGR_MASK			BIT(OFFSET_RNGR_SHIFT)

#define OFFSET_TEMP_SHIFT			4
#define OFFSET_TEMP_MASK			BIT(OFFSET_TEMP_SHIFT)

#define DWA_CTR_SET					1
#define DWA_CTR_UNSET				0

/* AUD3003X_50_AVC1 */
#define AVC_CON_FLAG_SHIFT			6
#define AVC_CON_FLAG_MASK			BIT(AVC_CON_FLAG_SHIFT)

#define AVC_VA_FLAG_SHIFT			5
#define AVC_VA_FLAG_MASK			BIT(AVC_VA_FLAG_SHIFT)

#define AVC_MU_FLAG_SHIFT			4
#define AVC_MU_FLAG_MASK			BIT(AVC_MU_FLAG_SHIFT)

#define AVC_BYPS_SHIFT				3
#define AVC_BYPS_MASK				BIT(AVC_BYPS_SHIFT)

#define AVC_VA_EN_SHIFT				2
#define AVC_VA_EN_MASK				BIT(AVC_VA_EN_SHIFT)

#define AVC_MU_EN_SHIFT				1
#define AVC_MU_EN_MASK				BIT(AVC_MU_EN_SHIFT)

#define AVC_EN_SHIFT				0
#define AVC_EN_MASK					BIT(AVC_EN_SHIFT)

/* AUD3003X_53_AVC4 */

#define DRC_SLOPE_SEL_SHIFT			4
#define DRC_SLOPE_SEL_WIDTH			3
#define DRC_SLOPE_SEL_MASK			MASK(DRC_SLOPE_SEL_WIDTH, DRC_SLOPE_SEL_SHIFT)

#define DRC_SLOPE_SEL_7				7
#define DRC_SLOPE_SEL_6				6
#define DRC_SLOPE_SEL_5				5
#define DRC_SLOPE_SEL_4				4
#define DRC_SLOPE_SEL_3				3
#define DRC_SLOPE_SEL_2				2
#define DRC_SLOPE_SEL_1				1
#define DRC_SLOPE_SEL_0				0

#define CTVOL_AVC_PO_GAIN_SHIFT		0
#define CTVOL_AVC_PO_GAIN_WIDTH		3
#define CTVOL_AVC_PO_GAIN_MASK		MASK(CTVOL_AVC_PO_GAIN_WIDTH, CTVOL_AVC_PO_GAIN_SHIFT)

#define CTVOL_AVC_GAIN_7			7
#define CTVOL_AVC_GAIN_6			6
#define CTVOL_AVC_GAIN_5			5
#define CTVOL_AVC_GAIN_4			4
#define CTVOL_AVC_GAIN_3			3
#define CTVOL_AVC_GAIN_2			2
#define CTVOL_AVC_GAIN_1			1
#define CTVOL_AVC_GAIN_0			0

/* AUD3003X_54_AVC5 */
#define AVC_ZCD_EN_SHIFT			7
#define AVC_ZCD_EN_MASK				BIT(AVC_ZCD_EN_SHIFT)

#define ZDR_SEL_SHIFT				4
#define ZDR_SEL_WIDTH				3
#define ZDR_SEL_MASK				MASK(ZDR_SEL_WIDTH, ZDR_SEL_SHIFT)

#define MUTE_MODE_SEL_SHIFT			3
#define MUTE_MODE_SEL_MASK			BIT(MUTE_MODE_SEL_SHIFT)

#define MUTE_MODE_ENABLE			1
#define MUTE_MODE_DISABLE			0

#define MUTE_TIME_SHIFT				0
#define MUTE_TIME_WIDTH				3
#define MUTE_TIME_MASK				MASK(MUTE_TIME_WIDTH, MUTE_TIME_SHIFT)

#define AVC5_ENABLE					1
#define AVC5_DISABLE				0

#define AVC5_VALUE_7				7
#define AVC5_VALUE_6				6
#define AVC5_VALUE_5				5
#define AVC5_VALUE_4				4
#define AVC5_VALUE_3				3
#define AVC5_VALUE_2				2
#define AVC5_VALUE_1				1
#define AVC5_VALUE_0				0

/* AUD3003X_58_AVC9 */
#define AVC_MUTE_INT_SHIFT			7
#define AVC_MUTE_INT_MASK			BIT(AVC_MUTE_INT_SHIFT)

#define CRO_GTR_SHIFT				6
#define CRO_GTR_MASK				BIT(CRO_GTR_SHIFT)

#define CRO_GTL_SHIFT				5
#define CRO_GTL_MASK				BIT(CRO_GTL_SHIFT)

#define CRO_MODE_SHIFT				4
#define CRO_MODE_MASK				BIT(CRO_MODE_SHIFT)

#define FORCE_FMUTE_SHIFT			3
#define FORCE_FMUTE_MASK			BIT(FORCE_FMUTE_SHIFT)

#define CRO_ALW_ON_SHIFT			2
#define CRO_ALW_ON_MASK				BIT(CRO_ALW_ON_SHIFT)

#define CRO_BOTH_SHIFT				1
#define CRO_BOTH_MASK				BIT(CRO_BOTH_SHIFT)

#define CRO_EN_SHIFT				0
#define CRO_EN_MASK					BIT(CRO_EN_SHIFT)

#define CRO_ENABLE					1
#define CRO_DISABLE					0

/* AUD3003X_5C_AVC13 */
#define AMUTE_MASKB_SHIFT			7
#define AMUTE_MASKB_MASK			BIT(AMUTE_MASKB_SHIFT)

#define AVC_HEADROOM_SHIFT			4
#define AVC_HEADROOM_WIDTH			3
#define AVC_HEADROOM_MASK			MASK(AVC_HEADROOM_WIDTH, AVC_HEADROOM_SHIFT)

#define DMUTE_MASKB_SHIFT			3
#define DMUTE_MASKB_MASK			BIT(DMUTE_MASKB_SHIFT)

#define AVC_MUTE_READO_SHIFT		2
#define AVC_MUTE_READO_MASK			BIT(AVC_MUTE_READO_SHIFT)

#define AVC_HEADSHOT_SHIFT			1
#define AVC_HEADSHOT_MASK			BIT(AVC_HEADSHOT_SHIFT)

#define AVC_HMODE_SHIFT				0
#define AVC_HMODE_MASK				BIT(AVC_HMODE_SHIFT)


/* AUD3003X_5F_AVC16 */
#define SIGN_AV_SHIFT				6
#define SIGN_AV_MASK				BIT(SIGN_AV_SHIFT)

#define AVC_AVOL_VARI_SHIFT			0
#define AVC_AVOL_VARI_WIDTH			5
#define AVC_AVOL_VARI_MASK			MASK(AVC_AVOL_VARI_WIDTH, AVC_AVOL_VARI_SHIFT)

/* AUD3003X_61_AVC18 */
#define SIGN_AC_SHIFT				6
#define SIGN_AC_MASK				BIT(SIGN_AC_SHIFT)

#define AVC_AVOL_CONS_SHIFT			0
#define AVC_AVOL_CONS_WIDTH			5
#define AVC_AVOL_CONS_MASK			MASK(AVC_AVOL_CONS_WIDTH, AVC_AVOL_CONS_SHIFT)

/* AUD3003X_63_AVC20 */
#define SIGN_AN_SHIFT				6
#define SIGN_AN_MASK				BIT(SIGN_AN_SHIFT)

#define AVC_AVOL_NG_SHIFT			0
#define AVC_AVOL_NG_WIDTH			5
#define AVC_AVOL_NG_MASK			MASK(AVC_AVOL_NG_WIDTH, AVC_AVOL_NG_SHIFT)

/* AUD3003X_68_AVC25 */
#define CTRL1_AVC25_SHIFT			0
#define CTRL1_AVC25_MASK			BIT(CTRL1_AVC25_SHIFT)

#define AVC25_8						0x8

/* AUD3003X_71_AVC34 */
#define AVC_DELAY0_SHIFT			0
#define AVC_DELAY0_WIDTH			8
#define AVC_DELAY0_MASK				MASK(AVC_DELAY0_WIDTH, AVC_DELAY0_SHIFT)

#define AVC_DELAY0_48K				0x18
#define AVC_DELAY0_192K_384K		0xC7

/* AUD3003X_72_AVC35 */
#define AVC_DELAY1_SHIFT			0
#define AVC_DELAY1_WIDTH			8
#define AVC_DELAY1_MASK				MASK(AVC_DELAY1_WIDTH, AVC_DELAY1_SHIFT)

#define AVC_DELAY1_48K				0xDD
#define AVC_DELAY1_192K				0x39
#define AVC_DELAY1_384K				0x3A

/* AUD3003X_73_AVC36 */
#define AVC_DELAY2_SHIFT			0
#define AVC_DELAY2_WIDTH			8
#define AVC_DELAY2_MASK				MASK(AVC_DELAY2_WIDTH, AVC_DELAY2_SHIFT)

#define AVC_DELAY2_48K				0x17
#define AVC_DELAY2_192K_384K		0xC4

/* AUD3003X_74_AVC37 */
#define AVC_DELAY3_SHIFT			0
#define AVC_DELAY3_WIDTH			8
#define AVC_DELAY3_MASK				MASK(AVC_DELAY3_WIDTH, AVC_DELAY3_SHIFT)

#define AVC_DELAY3_48K				0xE9
#define AVC_DELAY3_192K				0x39
#define AVC_DELAY3_384K				0x3A

/* AUD3003X_7A_AVC43 */
#define DRC_LIMIT_SHIFT				3
#define DRC_LIMIT_WIDTH				5
#define DRC_LIMIT_MASK				MASK(DRC_LIMIT_WIDTH, DRC_LIMIT_SHIFT)

#define DIG_MUTE_CLK_B_SHIFT		2
#define DIG_MUTE_CLK_B_MASK			BIT(DIG_MUTE_CLK_B_SHIFT)

#define DIG_MUTE_DATA_B_SHIFT		1
#define DIG_MUTE_DATA_B_MASK		BIT(DIG_MUTE_DATA_B_SHIFT)

#define FMUTE_ENB_SHIFT				0
#define FMUTE_ENB_MASK				BIT(FMUTE_ENB_SHIFT)

/* AUD3003X_7B_AVC44 */
#define FMUTE_SPEED_SHIFT			5
#define FMUTE_SPEED_WIDTH			3
#define FMUTE_SPEED_MASK			MASK(FMUTE_SPEED_WIDTH, FMUTE_SPEED_SHIFT)

#define FMUTE_SPEED_192K			4
#define FMUTE_SPEED_384K			3

#define ZCD_MODE_SEL_SHIFT			3
#define ZCD_MODE_SEL_WIDTH			2
#define ZCD_MODE_SEL_MASK			MASK(ZCD_MODE_SEL_WIDTH, ZCD_MODE_SEL_SHIFT)

#define CTVOL_SPK_POS_GAIN_SHIFT	0
#define CTVOL_SPK_POS_GAIN_WIDTH	3
#define CTVOL_SPK_POS_GAIN_MASK		MASK(CTVOL_SPK_POS_GAIN_WIDTH, CTVOL_SPK_POS_GAIN_SHIFT)

/* AUD3003X_7C_OCPCTRL0 */
#define OCP_ENL_SHIFT				1
#define OCP_ENL_MASK				BIT(OCP_ENL_SHIFT)

#define OCP_ENR_SHIFT				0
#define OCP_ENR_MASK				BIT(OCP_ENR_SHIFT)

#define OCP_EN_DISABLE				0
#define OCP_EN_ENABLE				1

/* AUD3003X_7E_AVC47 */
#define AVC47_SHIFT					0
#define AVC47_WIDTH					8
#define AVC47_MASK					MASK(AVC47_WIDTH, AVC47_SHIFT)

#define AVC47_192K					0x02
#define AVC47_384K					0x03

/* AUD3003X_93_DSM_CON1 */
#define LF_ORDER_SHIFT				6
#define LF_ORDER_WIDTH				2
#define LF_ORDER_MASK				MASK(LF_ORDER_WIDTH, LF_ORDER_SHIFT)

#define LF_ORDER_2ND				0
#define LF_ORDER_3RD				1
#define LF_ORDER_4TH				2

#define NOTCH_SHIFT					0
#define NOTCH_MASK					BIT(NOTCH_SHIFT)

#define NOTCH_DISABLE				0
#define NOTCH_ENABLE				1

/* AUD3003X_94_DSM_CON2 */
#define DAC_DEMOFF_SHIFT			4
#define DAC_DEMOFF_WIDTH			2
#define DAC_DEMOFF_MASK				MASK(DAC_DEMOFF_WIDTH, DAC_DEMOFF_SHIFT)

#define DEM_DISABLE					0
#define DEM_ENABLE					3

#define DAC_ENDTH_SHIFT				2
#define DAC_ENDTH_MASK				BIT(DAC_ENDTH_SHIFT)

#define DAC_ALLTIME_SHIFT			1
#define DAC_ALLTIME_MASK			BIT(DAC_ALLTIME_SHIFT)

#define DAC_SYMDTH_SHIFT			0
#define DAC_SYMDTH_MASK				BIT(DAC_SYMDTH_SHIFT)

#define SYMDTH_ASYM					0
#define SYMDTH_SYM					1

/* AUD3003X_95_DSM_CON3 */
#define DAC_AMTDTH_SHIFT			0
#define DAC_AMTDTH_WIDTH			8
#define DAC_AMTDTH_MASK				MASK(DAC_AMTDTH_WIDTH, AC_AMTDTH_SHIFT)

/* AUD3003X_9D_AVC_DWA_OFF_THRES */
#define AVC_DWA_OFF_LVL_SHIFT		0
#define AVC_DWA_OFF_LVL_WIDTH		8
#define AVC_DWA_OFF_LVL_MASK		MASK(AVC_DWA_OFF_LVL_WIDTH, AVC_DWA_OFF_LVL_SHIFT)

#define AVC_DWA_OFF_LVL_MIN			0x0

/* AUD3003X_9E_AVC_BTS_ON_THRES */
#define AVC_BTS_ON_LVL_SHIFT		0
#define AVC_BTS_ON_LVL_WIDTH		8
#define AVC_BTS_ON_LVL_MASK			MASK(AVC_BTS_ON_LVL_WIDTH, AVC_BTS_ON_LVL_SHIFT)

#define AVC_BTS_ON_LVL_MAX			0xFF

/* AUD3003X_B0_ODSEL1 */
#define T_PDB_BGR_SHIFT				7
#define T_PDB_BGR_MASK				BIT(T_PDB_BGR_SHIFT)

#define T_EN_BGR_PULLDN_SHIFT		5
#define T_EN_BGR_PULLDN_MASK		BIT(T_EN_BGR_PULLDN_SHIFT)

/* AUD3003X_B4_ODSEL5 */
#define T_RESETB_INTL_SHIFT			7
#define T_RESETB_INTL_MASK			BIT(T_RESETB_INTL_SHIFT)

#define T_RESETB_QUANTL_SHIFT		6
#define T_RESETB_QUANTL_MASK		BIT(T_RESETB_QUANTL_SHIFT)

#define T_RESETB_INTC_SHIFT			1
#define T_RESETB_INTC_MASK			BIT(T_RESETB_INTC_SHIFT)

#define T_RESETB_QUANTC_SHIFT		0
#define T_RESETB_QUANTC_MASK		BIT(T_RESETB_QUANTC_SHIFT)

/* AUD3003X_B5_ODSEL6 */
#define T_RESETB_INTR_SHIFT			6
#define T_RESETB_INTR_MASK			BIT(T_RESETB_INTR_SHIFT)

#define T_RESETB_QUANTR_SHIFT		5
#define T_RESETB_QUANTR_MASK		BIT(T_RESETB_QUANTR_SHIFT)

#define T_RESETB_BST4_SHIFT			1
#define T_RESETB_BST4_MASK			BIT(T_RESETB_BST4_SHIFT)

/* AUD3003X_B7_ODSEL8 */
#define T_EN_OUTTIEL_SHIFT			3
#define T_EN_OUTTIEL_MASK			BIT(T_EN_OUTTIEL_SHIFT)

/* AUD3003X_B8_ODSEL9 */
#define T_EN_OUTTIER_SHIFT			1
#define T_EN_OUTTIER_MASK			BIT(T_EN_OUTTIER_SHIFT)

/* AUD3003X_C0_ACTR_JD1 */
#define CTRV_GDET_VTG_SHIFT			5
#define CTRV_GDET_VTG_WIDTH			3
#define CTRV_GDET_VTG_MASK			MASK(CTRV_GDET_VTG_WIDTH, CTRV_GDET_VTG_SHIFT)

#define CTRV_GDET_POP_SHIFT			2
#define CTRV_GDET_POP_WIDTH			3
#define CTRV_GDET_POP_MASK			MASK(CTRV_GDET_POP_WIDTH, CTRV_GDET_POP_SHIFT)

#define GDET_50K			0
#define GDET_100K			1
#define GDET_200K			2
#define GDET_300K			3
#define GDET_500K			4
#define GDET_1000K			5
#define GDET_1500K			6
#define GDET_2000K			7

#define PDB_JD_SHIFT				1
#define PDB_JD_MASK					BIT(PDB_JD_SHIFT)

#define PDB_ANT_LDET_SHIFT			0
#define PDB_ANT_LDET_MASK			BIT(PDB_ANT_LDET_SHIFT)

#define ACTR_JD1_SET				1
#define ACTR_JD1_UNSET				0

/* AUD3003X_C1_ACTR_JD2 */
#define PDB_BTN_DET_SHIFT			6
#define PDB_BTN_DET_MASK			BIT(PDB_BTN_DET_SHIFT)

#define CTRV_ANT_LDET_VTH_SHIFT		4
#define CTRV_ANT_LDET_VTH_WIDTH		2
#define CTRV_ANT_LDET_VTH_MASK		MASK(CTRV_ANT_LDET_VTH_WIDTH, CTRV_ANT_LDET_VTH_SHIFT)

#define CTRV_LDET_VTH_SHIFT			2
#define CTRV_LDET_VTH_WIDTH			2
#define CTRV_LDET_VTH_MASK			MASK(CTRV_LDET_VTH_WIDTH, CTRV_LDET_VTH_SHIFT)

#define LDET_VTH_1_63V		0
#define LDET_VTH_1_57V		1
#define LDET_VTH_1_24V		2
#define LDET_VTH_0_90V		3

#define CTRV_LDET_POP_SHIFT			0
#define CTRV_LDET_POP_WIDTH			2
#define CTRV_LDET_POP_MASK			MASK(CTRV_LDET_POP_WIDTH, CTRV_LDET_POP_SHIFT)

#define LDET_500K			0
#define LDET_1000K			1
#define LDET_1500K			2
#define LDET_2000K			3

/* AUD3003X_C2_ACTR_BTN */
#define PDB_ANT_MDET_SHIFT			7
#define PDB_ANT_MDET_MASK			BIT(PDB_ANT_MDET_SHIFT)

#define PDB_ANT_MDET2_SHIFT			6
#define PDB_ANT_MDET2_MASK			BIT(PDB_ANT_MDET2_SHIFT)

#define CTRV_BTN_REF_SHIFT			3
#define CTRV_BTN_REF_WIDTH			3
#define CTRV_BTN_REF_MASK			MASK(CTRV_BTN_REF_WIDTH, CTRV_BTN_REF_SHIFT)

#define CTRV_ANT_MDET_SHIFT			0
#define CTRV_ANT_MDET_WIDTH			3
#define CTRV_ANT_MDET_MASK			MASK(CTRV_ANT_MDET_WIDTH, CTRV_ANT_MDET_SHIFT)

/* AUD3003X_C3_ACTR_MCB1 */
#define CTRV_MCB1_NS_SHIFT			3
#define CTRV_MCB1_NS_WIDTH			3
#define CTRV_MCB1_NS_MASK			MASK(CTRV_MCB1_NS_WIDTH, CTRV_MCB1_NS_SHIFT)

#define CTRV_MCB1_HQ_SHIFT			5
#define CTRV_MCB1_HQ_MASK			BIT(CTRV_MCB1_HQ_SHIFT)

#define MIC_BIAS1_VO_2_8V_LN		7
#define MIC_BIAS1_VO_2_6V_LN		6
#define MIC_BIAS1_VO_1_8V_LN		5
#define MIC_BIAS1_VO_0_9V_LN		4
#define MIC_BIAS1_VO_2_8V			3
#define MIC_BIAS1_VO_2_6V			2
#define MIC_BIAS1_VO_1_8V			1
#define MIC_BIAS1_VO_0_7V			0

#define CTRV_MCB2_NS_SHIFT			0
#define CTRV_MCB2_NS_WIDTH			3
#define CTRV_MCB2_NS_MASK			MASK(CTRV_MCB2_NS_WIDTH, CTRV_MCB2_NS_SHIFT)

#define CTRV_MCB2_HQ_SHIFT			2
#define CTRV_MCB2_HQ_MASK			BIT(CTRV_MCB2_HQ_SHIFT)

#define MIC_BIAS2_VO_2_8V_LN		7
#define MIC_BIAS2_VO_2_6V_LN		6
#define MIC_BIAS2_VO_1_7V_LN		5
#define MIC_BIAS2_VO_0_7V_LN		4
#define MIC_BIAS2_VO_2_8V			3
#define MIC_BIAS2_VO_2_6V			2
#define MIC_BIAS2_VO_1_7V			1
#define MIC_BIAS2_VO_0_7V			0

/* AUD3003X_C4_ACTR_MCB2 */
#define CTRV_MCB3_NS_SHIFT			5
#define CTRV_MCB3_NS_MASK			BIT(CTRV_MCB3_NS_SHIFT)

#define MIC_BIAS3_VO_2_8V			1
#define MIC_BIAS3_VO_2_6V			0

/* AUD3003X_C5_ACTR_MCB3 */
#define EN_MCB_BYPASS_SHIFT			7
#define EN_MCB_BYPASS_MASK			BIT(EN_MCB_BYPASS_SHIFT)

#define PDB_MCB_LDO_SHIFT			3
#define PDB_MCB_LDO_MASK			BIT(PDB_MCB_LDO_SHIFT)

#define PDB_MCB1_NS_SHIFT			2
#define PDB_MCB1_NS_MASK			BIT(PDB_MCB1_NS_SHIFT)

#define PDB_MCB2_SHIFT				1
#define PDB_MCB2_MASK				BIT(PDB_MCB2_SHIFT)

#define PDB_MCB3_NS_SHIFT			0
#define PDB_MCB3_NS_MASK			BIT(PDB_MCB3_NS_SHIFT)

/* AUD3003X_C7_ACTR_IMP1 */
#define PDB_IMP_SHIFT				6
#define PDB_IMP_MASK				BIT(PDB_IMP_SHIFT)

/* AUD3003X_CA_ACTR_IMP4 */
#define CTMI_IMP_BUF2_SHIFT			4
#define CTMI_IMP_BUF2_WIDTH			3
#define CTMI_IMP_BUF2_MASK			MASK(CTMI_IMP_BUF2_WIDTH, CTMI_IMP_BUF2_SHIFT)

#define CTMI_IMP_REF_FS_SHIFT		0
#define CTMI_IMP_REF_FS_WIDTH		3
#define CTMI_IMP_REF_FS_MASK		MASK(CTMI_IMP_REF_FS_WIDTH, CTMI_IMP_REF_FS_SHIFT)

#define CTMI_IMP_7					7
#define CTMI_IMP_6					6
#define CTMI_IMP_5					5
#define CTMI_IMP_4					4
#define CTMI_IMP_3					3
#define CTMI_IMP_2					2
#define CTMI_IMP_1					1
#define CTMI_IMP_0					0

/* AUD3003X_CB_ACTR_GP */
#define EN_HVS_TEST_CP2_SHIFT		6
#define EN_HVS_TEST_CP2_MASK		BIT(EN_HVS_TEST_CP2_SHIFT)

#define EN_DLDO_MIN_LOAD_SHIFT		5
#define EN_DLDO_MIN_LOAD_MASK		BIT(EN_DLDO_MIN_LOAD_SHIFT)

#define EN_DIG_RET_SHIFT			4
#define EN_DIG_RET_MASK				BIT(EN_DIG_RET_SHIFT)

#define CTMP_GPADCIN_SHIFT			1
#define CTMP_GPADCIN_WIDTH			3
#define CTMP_GPADCIN_MASK			MASK(CTMP_GPADCIN_WIDTH, CTMP_GPADCIN_SHIFT)

#define PDB_GPADC_SHIFT				0
#define PDB_GPADC_MASK				BIT(PDB_GPADC_SHIFT)

/* AUD3003X_CC_ACTR_DLDO */
#define EN_DLDO_SHIFT				7
#define EN_DLDO_MASK				BIT(EN_DLDO_SHIFT)

#define CTRV_DIG_LDO_SHIFT			4
#define CTRV_DIG_LDO_WIDTH			3
#define CTRV_DIG_LDO_MASK			MASK(CTRV_DIG_LDO_WIDTH, CTRV_DIG_LDO_SHIFT)

#define EN_DLDO_BYPASS_SHIFT		3
#define EN_DLDO_BYPASS_MASK			BIT(EN_DLDO_BYPASS_SHIFT)

#define CTMI_DLDO_SHIFT				0
#define CTMI_DLDO_WIDTH				3
#define CTMI_DLDO_MASK				MASK(CTMI_DLDO_WIDTH, CTMI_DLDO_SHIFT)

/* AUD3003X_D0_DCTR_CM */
#define DVS_CTRL_EN_SHIFT			6
#define DVS_CTRL_EN_MASK			BIT(DVS_CTRL_EN_SHIFT)

#define EN_OCC_SHIFT				1
#define EN_OCC_MASK					BIT(EN_OCC_SHIFT)

#define PDB_JD_CLK_EN_SHIFT			0
#define PDB_JD_CLK_EN_MASK			BIT(PDB_JD_CLK_EN_SHIFT)

#define DCTR_CM_SET					1
#define DCTR_CM_UNSET				0

/* AUD3003X_D1_DCTR_TEST1 */
#define T_SEL_CLK_DET_SHIFT			7
#define T_SEL_CLK_DET_MASK			BIT(T_SEL_CLK_DET_SHIFT)

#define T_CTRV_LDET_POP_SHIFT		4
#define T_CTRV_LDET_POP_MASK		BIT(T_CTRV_LDET_POP_SHIFT)

#define T_CTRV_GDET_POP_SHIFT		3
#define T_CTRV_GDET_POP_MASK		BIT(T_CTRV_GDET_POP_SHIFT)

#define T_PDB_ANT_LDET_SHIFT		0
#define T_PDB_ANT_LDET_MASK			BIT(T_PDB_ANT_LDET_SHIFT)

/* AUD3003X_D2_DCTR_TEST2 */
#define T_PDB_MCB_LDO_SHIFT			6
#define T_PDB_MCB_LDO_MASK			BIT(T_PDB_MCB_LDO_SHIFT)

#define T_PDB_MCB2_SHIFT			5
#define T_PDB_MCB2_MASK				BIT(T_PDB_MCB2_SHIFT)

#define T_CTRV_MCB2_NS_SHIFT		4
#define T_CTRV_MCB2_NS_MASK			BIT(T_CTRV_MCB2_NS_SHIFT)

#define T_CTRV_ANT_MDET_SHIFT		3
#define T_CTRV_ANT_MDET_MASK		BIT(T_CTRV_ANT_MDET_SHIFT)

#define T_PDB_ANT_MDET_SHIFT		2
#define T_PDB_ANT_MDET_MASK			BIT(T_PDB_ANT_MDET_SHIFT)

#define T_PDB_ANT_MDET2_SHIFT		1
#define T_PDB_ANT_MDET2_MASK		BIT(T_PDB_ANT_MDET2_SHIFT)

#define T_PDB_BTN_DET_SHIFT			0
#define T_PDB_BTN_DET_MASK			BIT(T_PDB_BTN_DET_SHIFT)

/* AUD3003X_D3_DCTR_TEST3 */
#define T_PDB_IMP_SHIFT				0
#define T_PDB_IMP_MASK				BIT(T_PDB_IMP_SHIFT)

/* AUD3003X_D4_DCTR_TEST4 */
#define T_EN_DIG_RET_SHIFT			5
#define T_EN_DIG_RET_MASK			BIT(T_EN_DIG_RET_SHIFT)

#define T_CTMP_GPADCIN_SHIFT		4
#define T_CTMP_GPADCIN_MASK			BIT(T_CTMP_GPADCIN_SHIFT)

#define T_PDB_GPADC_SHIFT			3
#define T_PDB_GPADC_MASK			BIT(T_PDB_GPADC_SHIFT)

/* AUD3003X_D5_DCTR_TEST5 */
#define T_A2D_GDET_OUT_SHIFT		4
#define T_A2D_GDET_OUT_WIDTH		2
#define T_A2D_GDET_OUT_MASK			MASK(T_A2D_GDET_OUT_WIDTH, T_A2D_GDET_OUT_SHIFT)

#define T_A2D_LDET_OUT_SHIFT		2
#define T_A2D_LDET_OUT_WIDTH		2
#define T_A2D_LDET_OUT_MASK			MASK(T_A2D_LDET_OUT_WIDTH, T_A2D_LDET_OUT_SHIFT)

#define T_A2D_ANT_LDET_OUT_SHIFT	0
#define T_A2D_ANT_LDET_OUT_WIDTH	2
#define T_A2D_ANT_LDET_OUT_MASK		MASK(T_A2D_ANT_LDET_OUT_WIDTH, T_A2D_ANT_LDET_OUT_SHIFT)

/* AUD3003X_D6_DCTR_TEST6 */
#define T_A2D_ANT_MDET2_OUT_SHIFT	6
#define T_A2D_ANT_MDET2_OUT_WIDTH	2
#define T_A2D_ANT_MDET2_OUT_MASK	MASK(T_A2D_ANT_MDET2_OUT_WIDTH, T_A2D_ANT_MDET2_OUT_SHIFT)

#define T_A2D_ANT_MDET_OUT_SHIFT	4
#define T_A2D_ANT_MDET_OUT_WIDTH	2
#define T_A2D_ANT_MDET_OUT_MASK		MASK(T_A2D_ANT_MDET_OUT_WIDTH, T_A2D_ANT_MDET_OUT_SHIFT)

#define T_A2D_BTN_OUT_SHIFT			2
#define T_A2D_BTN_OUT_WIDTH			2
#define T_A2D_BTN_OUT_MASK			MASK(T_A2D_BTN_OUT_WIDTH, T_A2D_BTN_OUT_SHIFT)

#define T_D2A_IN_JD_SHIFT			0
#define T_D2A_IN_JD_WIDTH			2
#define T_D2A_IN_JD_MASK			MASK(T_D2A_IN_JD_WIDTH, T_D2A_IN_JD_SHIFT)

/* AUD3003X_D7_DCTR_TEST7 */
#define T_D2D_EN_LOWIMP_SHIFT		6
#define T_D2D_EN_LOWIMP_WIDTH		2
#define T_D2D_EN_LOWIMP_MASK		MASK(T_D2D_EN_LOWIMP_WIDTH, T_D2D_EN_LOWIMP_SHIFT)

#define T_D2D_BNT_DBNCB_SHIFT		4
#define T_D2D_BNT_DBNCB_WIDTH		2
#define T_D2D_BNT_DBNCB_MASK		MASK(T_D2D_BNT_DBNCB_WIDTH, T_D2D_BNT_DBNCB_SHIFT)

/* AUD3003X_D8_DCTR_DBNC1 */
#define A2D_JACK_DBNC_IN_SHIFT		4
#define A2D_JACK_DBNC_IN_WIDTH		4
#define A2D_JACK_DBNC_IN_MASK		MASK(A2D_JACK_DBNC_IN_WIDTH, A2D_JACK_DBNC_IN_SHIFT)

#define A2D_JACK_DBNC_OUT_SHIFT		0
#define A2D_JACK_DBNC_OUT_WIDTH		4
#define A2D_JACK_DBNC_OUT_MASK		MASK(A2D_JACK_DBNC_OUT_WIDTH, A2D_JACK_DBNC_OUT_SHIFT)

#define A2D_JACK_DBNC_MAX			0xF

/* AUD3003X_D9_DCTR_DBNC2 */
#define A2D_JACK_DBNC_INT_IN_SHIFT	4
#define A2D_JACK_DBNC_INT_IN_WIDTH	4
#define A2D_JACK_DBNC_INT_IN_MASK	MASK(A2D_JACK_DBNC_INT_IN_WIDTH, A2D_JACK_DBNC_INT_IN_SHIFT)

#define A2D_JACK_DBNC_INT_OUT_SHIFT	0
#define A2D_JACK_DBNC_INT_OUT_WIDTH	4
#define A2D_JACK_DBNC_INT_OUT_MASK	MASK(A2D_JACK_DBNC_INT_OUT_WIDTH, A2D_JACK_DBNC_INT_OUT_SHIFT)

#define A2D_JACK_DBNC_INT_MAX		0xF

/* AUD3003X_DA_DCTR_DBNC3 */
#define ANT_LDET_DBNC_IN_SHIFT		4
#define ANT_LDET_DBNC_IN_WIDTH		4
#define ANT_LDET_DBNC_IN_MASK		MASK(ANT_LDET_DBNC_IN_WIDTH, ANT_LDET_DBNC_IN_SHIFT)

#define DA_DCTR_DBNC3_12			12
#define DA_DCTR_DBNC3_2				2

#define ANT_LDET_DBNC_OUT_SHIFT		0
#define ANT_LDET_DBNC_OUT_WIDTH		4
#define ANT_LDET_DBNC_OUT_MASK		MASK(ANT_LDET_DBNC_OUT_WIDTH, ANT_LDET_DBNC_OUT_SHIFT)

/* AUD3003X_DB_DCTR_DBNC4 */
#define ANT_MDET_DBNC_IN_SHIFT		4
#define ANT_MDET_DBNC_IN_WIDTH		4
#define ANT_MDET_DBNC_IN_MASK		MASK(ANT_MDET_DBNC_IN_WIDTH, ANT_MDET_DBNC_IN_SHIFT)

#define ANT_MDET_DBNC_OUT_SHIFT		0
#define ANT_MDET_DBNC_OUT_WIDTH		4
#define ANT_MDET_DBNC_OUT_MASK		MASK(ANT_MDET_DBNC_OUT_WIDTH, ANT_MDET_DBNC_OUT_SHIFT)

/* AUD3003X_DC_DCTR_DBNC5 */
#define ANT_MDET2_DBNC_IN_SHIFT		4
#define ANT_MDET2_DBNC_IN_WIDTH		4
#define ANT_MDET2_DBNC_IN_MASK		MASK(ANT_MDET2_DBNC_IN_WIDTH, ANT_MDET2_DBNC_IN_SHIFT)

#define ANT_MDET2_DBNC_OUT_SHIFT	0
#define ANT_MDET2_DBNC_OUT_WIDTH	4
#define ANT_MDET2_DBNC_OUT_MASK		MASK(ANT_MDET2_DBNC_OUT_WIDTH, ANT_MDET2_DBNC_OUT_SHIFT)

/* AUD3003X_DD_DCTR_DBNC6 */
#define CTMD_BTN_DBNC_SHIFT			0
#define CTMD_BTN_DBNC_WIDTH			4
#define CTMD_BTN_DBNC_MASK			MASK(CTMD_BTN_DBNC_WIDTH, CTMD_BTN_DBNC_SHIFT)

/* AUD3003X_E2_DCTR_FSM1 */
#define CNT_POLLING_SHIFT			6
#define CNT_POLLING_WIDTH			2
#define CNT_POLLING_MASK			MASK(CNT_POLLING_WIDTH, CNT_POLLING_SHIFT)

#define D2A_IN_JD_DELAY_SHIFT		0
#define D2A_IN_JD_DELAY_WIDTH		4
#define D2A_IN_JD_DELAY_MASK		MASK(D2A_IN_JD_DELAY_WIDTH, D2A_IN_JD_DELAY_SHIFT)

/* AUD3003X_E3_DCTR_FSM2 */
#define POLE_VALUE_SHIFT			4
#define POLE_VALUE_WIDTH			2
#define POLE_VALUE_MASK				MASK(POLE_VALUE_WIDTH, POLE_VALUE_SHIFT)

/* AUD3003X_E4_DCTR_FSM3 */
#define AP_ANT_RJIN_SHIFT			7
#define AP_ANT_RJIN_MASK			BIT(AP_ANT_RJIN_SHIFT)

#define AP_POLLING_SHIFT			6
#define AP_POLLING_MASK				BIT(AP_POLLING_SHIFT)

#define AP_JACK_IN_SHIFT			5
#define AP_JACK_IN_MASK				BIT(AP_JACK_IN_SHIFT)

#define AP_JACK_OUT_SHIFT			4
#define AP_JACK_OUT_MASK			BIT(AP_JACK_OUT_SHIFT)

#define AP_JACK_ANT_SHIFT			4
#define AP_JACK_ANT_WIDTH			3
#define AP_JACK_ANT_MASK			MASK(AP_JACK_ANT_WIDTH, AP_JACK_ANT_SHIFT)

/* AUD3003X_E5_DCTR_FSM4 */
#define EN_MCB2_HQ_SHIFT			2
#define EN_MCB2_HQ_MASK				BIT(EN_MCB2_HQ_SHIFT)

/* AUD3003X_E6_DCTR_GP */
#define T_CNT_ADC_DIV_SHIFT			7
#define T_CNT_ADC_DIV_MASK			BIT(T_CNT_ADC_DIV_SHIFT)

#define CNT_ADC_DIV_SHIFT			4
#define CNT_ADC_DIV_WIDTH			2
#define CNT_ADC_DIV_MASK			MASK(CNT_ADC_DIV_WIDTH, CNT_ADC_DIV_SHIFT)

#define CNT_GPADC_DUMP_SHIFT		0
#define CNT_GPADC_DUMP_WIDTH		3
#define CNT_GPADC_DUMP_MASK			MASK(CNT_GPADC_DUMP_WIDTH, CNT_GPADC_DUMP_SHIFT)

/* AUD3003X_E9_DCTR_IMP3 */
#define IMP_RAMP1_OPT_SHIFT			6
#define IMP_RAMP1_OPT_WIDTH			2
#define IMP_RAMP1_OPT_MASK			MASK(IMP_RAMP1_OPT_WIDTH, IMP_RAMP1_OPT_SHIFT)

#define CNT_IMP_OPT4_SHIFT			3
#define CNT_IMP_OPT4_WIDTH			3
#define CNT_IMP_OPT4_MASK			MASK(CNT_IMP_OPT4_WIDTH, CNT_IMP_OPT4_SHIFT)

#define CNT_IMP_OPT5_SHIFT			0
#define CNT_IMP_OPT5_WIDTH			3
#define CNT_IMP_OPT5_MASK			MASK(CNT_IMP_OPT5_WIDTH, CNT_IMP_OPT5_SHIFT)

/* AUD3003X_EA_DCTR_IMP4 */
#define IMP_SKIP_OPT_SHIFT			7
#define IMP_SKIP_OPT_MASK			BIT(IMP_SKIP_OPT_SHIFT)

/* AUD3003X_F0_STATUS1 */
#define ANT_MDET2_DET_SHIFT			6
#define ANT_MDET2_DET_MASK			BIT(ANT_MDET2_DET_SHIFT)

#define ANT_MDET_DET_SHIFT			5
#define ANT_MDET_DET_MASK			BIT(ANT_MDET_DET_SHIFT)

#define ANT_LDET_DET_SHIFT			4
#define ANT_LDET_DET_MASK			BIT(ANT_LDET_DET_SHIFT)

#define BNT_DET_SHIFT				3
#define BNT_DET_MASK				BIT(BNT_DET_SHIFT)

#define HPG_DET_SHIFT				2
#define HPG_DET_MASK				BIT(HPG_DET_SHIFT)

#define HPL_DET_SHIFT				1
#define HPL_DET_MASK				BIT(HPL_DET_SHIFT)

#define JACK_DET_SHIFT				0
#define JACK_DET_MASK				BIT(JACK_DET_SHIFT)

/* AUD3003X_F2_STATUS3 */
#define IMP_VAL_SHIFT				4
#define IMP_VAL_WIDTH				2
#define IMP_VAL_MASK				MASK(IMP_VAL_WIDTH, IMP_VAL_SHIFT)

/* AUD3003X_102_REF_CTRL1 */
#define PDB_BGR_SHIFT				7
#define PDB_BGR_MASK				BIT(PDB_BGR_SHIFT)

#define EN_BGR_LPF_BYPASS_SHIFT		6
#define EN_BGR_LPF_BYPASS_MASK		BIT(EN_BGR_LPF_BYPASS_SHIFT)

#define TEMP_REF_CTRL1_SHIFT		5
#define TEMP_REF_CTRL1_MASK			BIT(TEMP_REF_CTRL1_SHIFT)

#define EN_BGR_PULL_DN_SHIFT		1
#define EN_BGR_PULL_DN_MASK			BIT(EN_BGR_PULL_DN_SHIFT)

#define PDB_IBIAS_SHIFT				0
#define PDB_IBIAS_MASK				BIT(PDB_IBIAS_SHIFT)

#define REF_CTRL1_SET				1
#define REF_CTRL1_UNSET				0

/* AUD3003X_103_REF_CTRL2 */
#define EN_IBIAS_TEST_SHIFT			7
#define EN_IBIAS_TEST_MASK			BIT(EN_IBIAS_TEST_SHIFT)

/* AUD3003X_104_CTRL_CP */
#define PDB_CP1_SHIFT				7
#define PDB_CP1_MASK				BIT(PDB_CP1_SHIFT)

#define CTMD_CP_NOV_CP1_SHIFT		6
#define CTMD_CP_NOV_CP1_MASK		BIT(CTMD_CP_NOV_CP1_SHIFT)

#define EN_WIN_CTRL_CP1_SHIFT		5
#define EN_WIN_CTRL_CP1_MASK		BIT(EN_WIN_CTRL_CP1_SHIFT)

#define PDB_CP2_SHIFT				3
#define PDB_CP2_MASK				BIT(PDB_CP2_SHIFT)

#define CTMD_CP_NOV_CP2_SHIFT		2
#define CTMD_CP_NOV_CP2_MASK		BIT(CTMD_CP_NOV_CP2_SHIFT)

#define EN_WIN_CTRL_CP2_SHIFT		1
#define EN_WIN_CTRL_CP2_MASK		BIT(EN_WIN_CTRL_CP2_SHIFT)

#define CTRL_CP_SET					1
#define CTRL_CP_UNSET				0

/* AUD3003X_108_PD_VTS */
#define PDB_VTS_IGEN_SHIFT			7
#define PDB_VTS_IGEN_MASK			BIT(PDB_VTS_IGEN_SHIFT)

#define PDB_VTS_BST_SHIFT			6
#define PDB_VTS_BST_MASK			BIT(PDB_VTS_BST_SHIFT)

#define PDB_VTS_DSM_SHIFT			5
#define PDB_VTS_DSM_MASK			BIT(PDB_VTS_DSM_SHIFT)

#define EN_VTS_LPM_SHIFT			4
#define EN_VTS_LPM_MASK				BIT(EN_VTS_LPM_SHIFT)

/* AUD3003X_10A_CTRL_VTS2 */
#define CTVOL_VTS_BST_SHIFT			2
#define CTVOL_VTS_BST_WIDTH			2
#define CTVOL_VTS_BST_MASK			MASK(CTVOL_VTS_BST_WIDTH, CTVOL_VTS_BST_SHIFT)

#define CTVOL_VTS_BST_23_MASK		BIT(3)

#define SEL_VTSIN_SHIFT				1
#define SEL_VTSIN_MASK				BIT(SEL_VTSIN_SHIFT)

/* AUD3003X_10B_CTRL_VTS3 */
#define CTVOL_VTS_BSTP_SHIFT		5
#define CTVOL_VTS_BSTP_WIDTH		3
#define CTVOL_VTS_BSTP_MASK			MASK(CTVOL_VTS_BSTP_WIDTH, CTVOL_VTS_BSTP_SHIFT)

#define CTVOL_VTS_BSTN_SHIFT		1
#define CTVOL_VTS_BSTN_WIDTH		3
#define CTVOL_VTS_BSTN_MASK			MASK(CTVOL_VTS_BSTN_WIDTH, CTVOL_VTS_BSTN_SHIFT)

/* AUD3003X_110_BST_PDB */
#define PDB_BST1_SHIFT				7
#define PDB_BST1_MASK				BIT(PDB_BST1_SHIFT)

#define PDB_BST2_SHIFT				6
#define PDB_BST2_MASK				BIT(PDB_BST2_SHIFT)

#define PDB_BST3_SHIFT				5
#define PDB_BST3_MASK				BIT(PDB_BST3_SHIFT)

#define PDB_BST4_SHIFT				4
#define PDB_BST4_MASK				BIT(PDB_BST4_SHIFT)

/*
 * AUD3003X_111_BST1
 * AUD3003X_112_BST2
 * AUD3003X_113_BST3
 * AUD3003X_114_BST4
 */
#define CTVOL_BST_SHIFT				5
#define CTVOL_BST_WIDTH				3
#define CTVOL_BST_MASK				MASK(CTVOL_BST_WIDTH, CTVOL_BST_SHIFT)

#define CTVOL_BST_0_SHIFT			5
#define CTVOL_BST_0_MASK			BIT(CTVOL_BST_0_SHIFT)

#define CTVOL_BST_1_SHIFT			6
#define CTVOL_BST_1_MASK			BIT(CTVOL_BST_1_SHIFT)

#define CTMF_LPF_SHIFT				0
#define CTMF_LPF_WIDTH				5
#define CTMF_LPF_MASK				MASK(CTMF_LPF_WIDTH, CTMF_LPF_SHIFT)

#define CTMF_LPF_OFF				0
#define CTMF_LPF_265K				1
#define CTMF_LPF_132K				3
#define CTMF_LPF_88K				7
#define CTMF_LPF_66K				15
#define CTMF_LPF_53K				31

/* AUD3003X_115_DSM1 */
#define PDB_DSML_SHIFT				7
#define PDB_DSML_MASK				BIT(PDB_DSML_SHIFT)

#define CAL_SKIP_SHIFT				0
#define CAL_SKIP_MASK				BIT(CAL_SKIP_SHIFT)

/* AUD3003X_117_DSM2 */
#define PDB_DSMC_SHIFT				7
#define PDB_DSMC_MASK				BIT(PDB_DSMC_SHIFT)

/* AUD3003X_119_DSM3 */
#define PDB_DSMR_SHIFT				7
#define PDB_DSMR_MASK				BIT(PDB_DSMR_SHIFT)

/* AUD3003X_11B_DSMC */
#define EN_DWAL_SHIFT				7
#define EN_DWAL_MASK				BIT(EN_DWAL_SHIFT)

#define EN_DWAC_SHIFT 				6
#define EN_DWAC_MASK				BIT(EN_DWAC_SHIFT)

#define EN_DWAR_SHIFT				5
#define EN_DWAR_MASK				BIT(EN_DWAR_SHIFT)

#define EN_CC1L_SHIFT				4
#define EN_CC1L_MASK				BIT(EN_CC1L_SHIFT)

#define EN_CC1C_SHIFT				3
#define EN_CC1C_MASK				BIT(EN_CC1C_SHIFT)

#define EN_CC1R_SHIFT				2
#define EN_CC1R_MASK				BIT(EN_CC1R_SHIFT)

/* AUD3003X_11C_BSTC */
#define RESETB_BST4_SHIFT			4
#define RESETB_BST4_MASK			BIT(RESETB_BST4_SHIFT)

/* AUD3003X_11D_BST_OP */
#define EN_BST1_5K_SHIFT			7
#define EN_BST1_5K_MASK				BIT(EN_BST1_5K_SHIFT)

#define EN_BST2_5K_SHIFT			6
#define EN_BST2_5K_MASK				BIT(EN_BST2_5K_SHIFT)

#define EN_BST3_5K_SHIFT			5
#define EN_BST3_5K_MASK				BIT(EN_BST3_5K_SHIFT)

#define EN_BST4_5K_SHIFT			4
#define EN_BST4_5K_MASK				BIT(EN_BST4_5K_SHIFT)

#define EN_BYCMFBSW1_SHIFT			3
#define EN_BYCMFBSW1_MASK			BIT(EN_BYCMFBSW1_SHIFT)

#define SEL_MIC34_SHIFT				2
#define SEL_MIC34_MASK				BIT(SEL_MIC34_SHIFT)

#define EN_MIC1HZ_SHIFT				1
#define EN_MIC1HZ_MASK				BIT(EN_MIC1HZ_SHIFT)

#define EN_MIC4HZ_SHIFT				0
#define EN_MIC4HZ_MASK				BIT(EN_MIC4HZ_SHIFT)

/* AUD3003X_122_BST4PN */
#define CTVOL_BST4P_SHIFT			5
#define CTVOL_BST4P_WIDTH			3
#define CTVOL_BST4P_MASK			MASK(CTVOL_BST4P_WIDTH, CTVOL_BST4P_SHIFT)

#define CTVOL_BST4N_SHIFT			2
#define CTVOL_BST4N_WIDTH			3
#define CTVOL_BST4N_MASK			MASK(CTVOL_BST4N_WIDTH, CTVOL_BST4N_SHIFT)

/* AUD3003X_124_AUTO_DW */
#define AUTO_DWAL_SHIFT				2
#define AUTO_DWAL_MASK				BIT(AUTO_DWAL_SHIFT)

#define AUTO_DWAC_SHIFT				1
#define AUTO_DWAC_MASK				BIT(AUTO_DWAC_SHIFT)

#define AUTO_DWAR_SHIFT				0
#define AUTO_DWAR_MASK				BIT(AUTO_DWAR_SHIFT)

/* AUD3003X_125_DC_OFFSET_ON */
#define DC_OFFSET_LCH_1ST_SHIFT		6
#define DC_OFFSET_LCH_1ST_MASK		BIT(DC_OFFSET_LCH_1ST_SHIFT)

#define DC_OFFSET_RCH_1ST_SHIFT		5
#define DC_OFFSET_RCH_1ST_MASK		BIT(DC_OFFSET_RCH_1ST_SHIFT)

#define DC_OFFSET_CCH_1ST_SHIFT		4
#define DC_OFFSET_CCH_1ST_MASK		BIT(DC_OFFSET_CCH_1ST_SHIFT)

#define DC_OFFSET_LCH_2ND_SHIFT		2
#define DC_OFFSET_LCH_2ND_MASK		BIT(DC_OFFSET_LCH_2ND_SHIFT)

#define DC_OFFSET_RCH_2ND_SHIFT		1
#define DC_OFFSET_RCH_2ND_MASK		BIT(DC_OFFSET_RCH_2ND_SHIFT)

#define DC_OFFSET_CCH_2ND_SHIFT		0
#define DC_OFFSET_CCH_2ND_MASK		BIT(DC_OFFSET_CCH_2ND_SHIFT)

/* AUD3003X_130_PD_IDAC1 */
#define EN_IDAC_OUT_L_SHIFT			7
#define EN_IDAC_OUT_L_MASK			BIT(EN_IDAC_OUT_L_SHIFT)

#define EN_IDAC_OUT_R_SHIFT			6
#define EN_IDAC_OUT_R_MASK			BIT(EN_IDAC_OUT_R_SHIFT)

#define EN_IDAC_LS_L_SHIFT			5
#define EN_IDAC_LS_L_MASK			BIT(EN_IDAC_LS_L_SHIFT)

#define EN_IDAC_LS_R_SHIFT			4
#define EN_IDAC_LS_R_MASK			BIT(EN_IDAC_LS_R_SHIFT)

#define PDB_IDAC_L_SHIFT			3
#define PDB_IDAC_L_MASK				BIT(PDB_IDAC_L_SHIFT)

#define PDB_IDAC_R_SHIFT			2
#define PDB_IDAC_R_MASK				BIT(PDB_IDAC_R_SHIFT)

#define PDB_IDAC_AMP_L_SHIFT		1
#define PDB_IDAC_AMP_L_MASK			BIT(PDB_IDAC_AMP_L_SHIFT)

#define PDB_IDAC_AMP_R_SHIFT		0
#define PDB_IDAC_AMP_R_MASK			BIT(PDB_IDAC_AMP_R_SHIFT)

/* AUD3003X_131_PD_IDAC2 */
#define EN_IDAC_OUT_L_SHIFT			7
#define EN_IDAC_OUT_L_MASK			BIT(EN_IDAC_OUT_L_SHIFT)

#define EN_IDAC_OUT_R_SHIFT			6
#define EN_IDAC_OUT_R_MASK			BIT(EN_IDAC_OUT_R_SHIFT)

#define PDB_IDAC_IGEN_PN_SHIFT		4
#define PDB_IDAC_IGEN_PN_MASK		BIT(PDB_IDAC_IGEN_PN_SHIFT)

#define PDB_IDAC_IGEN_SHIFT			3
#define PDB_IDAC_IGEN_MASK			BIT(PDB_IDAC_IGEN_SHIFT)

#define PDB_IDAC_IGEN_AMP1_SHIFT	2
#define PDB_IDAC_IGEN_AMP1_MASK		BIT(PDB_IDAC_IGEN_AMP1_SHIFT)

#define PDB_IDAC_IGEN_AMP2_SHIFT	1
#define PDB_IDAC_IGEN_AMP2_MASK		BIT(PDB_IDAC_IGEN_AMP2_SHIFT)

#define PDB_IDAC_BIAS_AMP_SHIFT		0
#define PDB_IDAC_BIAS_AMP_MASK		BIT(PDB_IDAC_BIAS_AMP_SHIFT)

#define PD_IDAC2_SET				1
#define PD_IDAC2_UNSET				0

/* AUD3003X_138_PD_HP */
#define PDB_HP_BIAS_SHIFT			7
#define PDB_HP_BIAS_MASK			BIT(PDB_HP_BIAS_SHIFT)

#define PDB_HP_1STL_SHIFT			6
#define PDB_HP_1STL_MASK			BIT(PDB_HP_1STL_SHIFT)

#define PDB_HP_2NDL_SHIFT			5
#define PDB_HP_2NDL_MASK			BIT(PDB_HP_2NDL_SHIFT)

#define PDB_HP_DRVL_SHIFT			4
#define PDB_HP_DRVL_MASK			BIT(PDB_HP_DRVL_SHIFT)

#define PDB_HP_1STR_SHIFT			2
#define PDB_HP_1STR_MASK			BIT(PDB_HP_1STR_SHIFT)

#define PDB_HP_2NDR_SHIFT			1
#define PDB_HP_2NDR_MASK			BIT(PDB_HP_2NDR_SHIFT)

#define PDB_HP_DRVR_SHIFT			0
#define PDB_HP_DRVR_MASK			BIT(PDB_HP_DRVR_SHIFT)

#define PDB_HP_SET					1
#define PDB_HP_UNSET				0

/* AUD3003X_139_PD_SURGE */
#define PDB_SURGE_REGL_SHIFT		7
#define PDB_SURGE_REGL_MASK			BIT(PDB_SURGE_REGL_SHIFT)

#define PDB_SURGE_POS_NEGL_SHIFT	6
#define PDB_SURGE_POS_NEGL_MASK		BIT(PDB_SURGE_POS_NEGL_SHIFT)

#define PDB_SURGE_NEGL_SHIFT		5
#define PDB_SURGE_NEGL_MASK			BIT(PDB_SURGE_NEGL_SHIFT)

#define EN_SURGEL_SHIFT				4
#define EN_SURGEL_MASK				BIT(EN_SURGEL_SHIFT)

#define PDB_SURGE_REGR_SHIFT		3
#define PDB_SURGE_REGR_MASK			BIT(PDB_SURGE_REGR_SHIFT)

#define PDB_SURGE_POS_NEGR_SHIFT	2
#define PDB_SURGE_POS_NEGR_MASK		BIT(PDB_SURGE_POS_NEGR_SHIFT)

#define PDB_SURGE_NEGR_SHIFT		1
#define PDB_SURGE_NEGR_MASK			BIT(PDB_SURGE_NEGR_SHIFT)

#define EN_SURGER_SHIFT				0
#define EN_SURGER_MASK				BIT(EN_SURGER_SHIFT)

/* AUD3003X_13A_POP_HP */
#define EN_UHQA_SHIFT				7
#define EN_UHQA_MASK				BIT(EN_UHQA_SHIFT)

#define EN_HP_BODY_SEL_SHIFT		6
#define EN_HP_BODY_SEL_MASK			BIT(EN_HP_BODY_SEL_SHIFT)

#define SEL_RES_SUB_SHIFT			5
#define SEL_RES_SUB_MASK			BIT(SEL_RES_SUB_SHIFT)

#define CTRF_HPZ_SHIFT				4
#define CTRF_HPZ_MASK				BIT(CTRF_HPZ_SHIFT)

#define CTPOP_HPL_SHIFT				3
#define CTPOP_HPL_MASK				BIT(CTPOP_HPL_SHIFT)

#define CTPOP_HPR_SHIFT				2
#define CTPOP_HPR_MASK				BIT(CTPOP_HPR_SHIFT)

#define EN_OUTTIEL_SHIFT			1
#define EN_OUTTIEL_MASK				BIT(EN_OUTTIEL_SHIFT)

#define EN_OUTTIER_SHIFT			0
#define EN_OUTTIER_MASK				BIT(EN_OUTTIER_SHIFT)

#define POP_HP_SET					1
#define POP_HP_UNSET				0

/* AUD3003X_13B_OCP_HP */
#define EN_HP_OCPL_SHIFT			1
#define EN_HP_OCPL_MASK				BIT(EN_HP_OCPL_SHIFT)

#define EN_HP_OCPR_SHIFT			0
#define EN_HP_OCPR_MASK				BIT(EN_HP_OCPR_SHIFT)

/* AUD3003X_13F_CT_HPL */
#define CTVOL_HPL_MUTE_SHIFT		5
#define CTVOL_HPL_MUTE_MASK			BIT(CTVOL_HPL_MUTE_SHIFT)

#define CTVOL_HPL_SHIFT				0
#define CTVOL_HPL_WIDTH				4
#define CTVOL_HPL_MASK				MASK(CTVOL_HPL_WIDTH, CTVOL_HPL_SHIFT)

#define CTVOL_HPL_7					7
#define CTVOL_HPL_6					6
#define CTVOL_HPL_5					5
#define CTVOL_HPL_4					4
#define CTVOL_HPL_3					3
#define CTVOL_HPL_2					2
#define CTVOL_HPL_1					1
#define CTVOL_HPL_0					0

/* AUD3003X_140_CT_HPR */
#define CTVOL_HPR_MUTE_SHIFT		5
#define CTVOL_HPR_MUTE_MASK			BIT(CTVOL_HPR_MUTE_SHIFT)

#define CTVOL_HPR_SHIFT				0
#define CTVOL_HPR_WIDTH				4
#define CTVOL_HPR_MASK				MASK(CTVOL_HPR_WIDTH, CTVOL_HPR_SHIFT)

#define CTVOL_HPR_7					7
#define CTVOL_HPR_6					6
#define CTVOL_HPR_5					5
#define CTVOL_HPR_4					4
#define CTVOL_HPR_3					3
#define CTVOL_HPR_2					2
#define CTVOL_HPR_1					1
#define CTVOL_HPR_0					0

/* AUD3003X_142_CTRL_OVP0 */
#define CTRV_SURGE_REFP_SHIFT		5
#define CTRV_SURGE_REFP_WIDTH		3
#define CTRV_SURGE_REFP_MASK		MASK(CTRV_SURGE_REFP_WIDTH, CTRV_SURGE_REFP_SHIFT)

#define OVP_MUTE_SEL_SHIFT			4
#define OVP_MUTE_SEL_MASK			BIT(OVP_MUTE_SEL_SHIFT)

#define CTRV_SURGE_REFN_SHIFT		0
#define CTRV_SURGE_REFN_WIDTH		4
#define CTRV_SURGE_REFN_MASK		MASK(CTRV_SURGE_REFN_WIDTH, CTRV_SURGE_REFN_SHIFT)

/* AUD3003X_143_CTRL_OVP1 */
#define OVP_TIME_SLOT_SHIFT			6
#define OVP_TIME_SLOT_WIDTH			2
#define OVP_TIME_SLOT_MASK			MASK(OVP_TIME_SLOT_WIDTH, OVP_TIME_SLOT_SHIFT)

#define OVP_MASK_SHIFT				5
#define OVP_MASK_MASK				BIT(OVP_MASK_SHIFT)

#define OVP_APON_SHIFT				4
#define OVP_APON_MASK				BIT(OVP_APON_SHIFT)

#define OVP_UNMUTE_SHIFT			3
#define OVP_UNMUTE_MASK				BIT(OVP_UNMUTE_SHIFT)

#define OVP_POL_SHIFT				2
#define OVP_POL_MASK				BIT(OVP_POL_SHIFT)

/* AUD3003X_149_PD_EP */
#define EN_EP_OCP_SHIFT				5
#define EN_EP_OCP_MASK				BIT(EN_EP_OCP_SHIFT)

#define PDB_EP_BIAS_SHIFT			3
#define PDB_EP_BIAS_MASK			BIT(PDB_EP_BIAS_SHIFT)

#define PDB_EP_1ST_SHIFT			2
#define PDB_EP_1ST_MASK				BIT(PDB_EP_1ST_SHIFT)

#define PDB_EP_2ND_SHIFT			1
#define PDB_EP_2ND_MASK				BIT(PDB_EP_2ND_SHIFT)

#define PDB_EP_DRV_SHIFT			0
#define PDB_EP_DRV_MASK				BIT(PDB_EP_DRV_SHIFT)

/* AUD3003X_14C_EP_AVOL */
#define CTVOL_EP_MUTE_SHIFT			5
#define CTVOL_EP_MUTE_MASK			BIT(CTVOL_EP_MUTE_SHIFT)

#define CTVOL_EP_SHIFT				0
#define CTVOL_EP_WIDTH				5
#define CTVOL_EP_MASK				MASK(CTVOL_EP_WIDTH, CTVOL_EP_SHIFT)

/* AUD3003X_151_ADC_CLK1 */
#define LCP4_CLK_PHASE_SHIFT		6
#define LCP4_CLK_PHASE_WIDTH		2
#define LCP4_CLK_PHASE_MASK			MASK(LCP4_CLK_PHASE_WIDTH, LCP4_CLK_PHASE_SHIFT)

#define LCP4_CLK_SEL_SHIFT			4
#define LCP4_CLK_SEL_WIDTH			2
#define LCP4_CLK_SEL_MASK			MASK(LCP4_CLK_SEL_WIDTH, LCP4_CLK_SEL_SHIFT)

#define LCP1_CLK_PHASE_SHIFT		2
#define LCP1_CLK_PHASE_WIDTH		2
#define LCP1_CLK_PHASE_MASK			MASK(LCP1_CLK_PHASE_WIDTH, LCP1_CLK_PHASE_SHIFT)

#define LCP1_CLK_SEL_SHIFT			0
#define LCP1_CLK_SEL_WIDTH			2
#define LCP1_CLK_SEL_MASK			MASK(LCP1_CLK_SEL_WIDTH, LCP1_CLK_SEL_SHIFT)

#define CLK_PHASE_0					0
#define CLK_PHASE_90				1
#define CLK_PHASE_180				2
#define CLK_PHASE_270				3

#define CLK_SEL_6_25M				0
#define CLK_SEL_3_125M				1
#define CLK_SEL_1_5625M				2
#define CLK_SEL_0_78125M			3

/* AUD3003X_184_READ_ON4 */
#define CAP_SWL_SHIFT				0
#define CAP_SWL_WIDTH				5
#define CAP_SWL_MASK				MASK(CAP_SWL_WIDTH, CAP_SWL_SHIFT)

/* AUD3003X_185_READ_ON5 */
#define CAP_SWC_SHIFT				0
#define CAP_SWC_WIDTH				5
#define CAP_SWC_MASK				MASK(CAP_SWC_WIDTH, CAP_SWC_SHIFT)

/* AUD3003X_186_READ_ON6 */
#define CAP_SWR_SHIFT				0
#define CAP_SWR_WIDTH				5
#define CAP_SWR_MASK				MASK(CAP_SWR_WIDTH, CAP_SWR_SHIFT)

/* AUD3003X_244_HPLOFF_S_2 */
#define HPL_S7_SHIFT				7
#define HPL_S7_MASK					BIT(HPL_S7_SHIFT)

#define HPL_S6_SHIFT				6
#define HPL_S6_MASK					BIT(HPL_S6_SHIFT)

#define HPL_S5_SHIFT				5
#define HPL_S5_MASK					BIT(HPL_S5_SHIFT)

#define HPL_S4_SHIFT				4
#define HPL_S4_MASK					BIT(HPL_S4_SHIFT)

#define HPL_S3_SHIFT				3
#define HPL_S3_MASK					BIT(HPL_S3_SHIFT)

#define HPL_S2_SHIFT				2
#define HPL_S2_MASK					BIT(HPL_S2_SHIFT)

#define HPL_S1_SHIFT				1
#define HPL_S1_MASK					BIT(HPL_S1_SHIFT)

#define HPL_S0_SHIFT				0
#define HPL_S0_MASK					BIT(HPL_S0_SHIFT)

#define HPLOFF_SET					1
#define HPLOFF_UNSET				0

/* AUD3003X_247_HPROFF_S_2 */
#define HPR_S7_SHIFT				7
#define HPR_S7_MASK					BIT(HPR_S7_SHIFT)

#define HPR_S6_SHIFT				6
#define HPR_S6_MASK					BIT(HPR_S6_SHIFT)

#define HPR_S5_SHIFT				5
#define HPR_S5_MASK					BIT(HPR_S5_SHIFT)

#define HPR_S4_SHIFT				4
#define HPR_S4_MASK					BIT(HPR_S4_SHIFT)

#define HPR_S3_SHIFT				3
#define HPR_S3_MASK					BIT(HPR_S3_SHIFT)

#define HPR_S2_SHIFT				2
#define HPR_S2_MASK					BIT(HPR_S2_SHIFT)

#define HPR_S1_SHIFT				1
#define HPR_S1_MASK					BIT(HPR_S1_SHIFT)

#define HPR_S0_SHIFT				0
#define HPR_S0_MASK					BIT(HPR_S0_SHIFT)

#define HPROFF_SET					1
#define HPROFF_UNSET				0

/* AUD3003X_156_DA_CP3 */
#define CTMF_CP_CLK1_LOW_SHIFT		4
#define CTMF_CP_CLK1_LOW_WIDTH		3
#define CTMF_CP_CLK1_LOW_MASK		MASK(CTMF_CP_CLK1_LOW_WIDTH, CTMF_CP_CLK1_LOW_SHIFT)

#define CTMF_CP_CLK1_LOW_1			1

#define CTMF_CP_CLK2_LOW_SHIFT		0
#define CTMF_CP_CLK2_LOW_WIDTH		3
#define CTMF_CP_CLK2_LOW_MASK		MASK(CTMF_CP_CLK2_LOW_WIDTH, CTMF_CP_CLK2_LOW_SHIFT)

#define CTMF_CP_CLK2_LOW_1			1

/* AUD3003X_2B3_CTRL_CP4 */
#define CTMI_HP_2ND_SHIFT			2
#define CTMI_HP_2ND_WIDTH			3
#define CTMI_HP_2ND_MASK			MASK(CTMI_HP_2ND_WIDTH, CTMI_HP_2ND_SHIFT)

#define CTMI_HP_2ND_192K_384K		3

#define CTMI_HP_1ST_SHIFT			0
#define CTMI_HP_1ST_WIDTH			2
#define CTMI_HP_1ST_MASK			MASK(CTMI_HP_1ST_WIDTH, CTMI_HP_1ST_SHIFT)

/* AUD3003X_2B4_CTRL_HP0 */
#define CTCF_HP_CC_SHIFT			4
#define CTCF_HP_CC_WIDTH			4
#define CTCF_HP_CC_MASK				MASK(CTCF_HP_CC_WIDTH, CTCF_HP_CC_SHIFT)

#define CTMI_HP_DRV_SHIFT			0
#define CTMI_HP_DRV_WIDTH			4
#define CTMI_HP_DRV_MASK			MASK(CTMI_HP_DRV_WIDTH, CTMI_HP_DRV_SHIFT)

#define CTRL_HP_DEFAULT				0x61
#define CTRL_HP_7					7
#define CTRL_HP_4					4

/* AUD3003X_2B7_CTRL_EP0 */
#define CTMI_EP_1ST_SHIFT			4
#define CTMI_EP_1ST_WIDTH			2
#define CTMI_EP_1ST_MASK			MASK(CTMI_EP_1ST_WIDTH, CTMI_EP_1ST_SHIFT)

#define CTMI_EP_1ST_3				3
#define CTMI_EP_1ST_2				2
#define CTMI_EP_1ST_1				1
#define CTMI_EP_1ST_0				0

#define CTMI_EP_2ND_SHIFT			0
#define CTMI_EP_2ND_WIDTH			3
#define CTMI_EP_2ND_MASK			MASK(CTMI_EP_2ND_WIDTH, CTMI_EP_2ND_SHIFT)

#define CTMI_EP_2ND_7				7
#define CTMI_EP_2ND_6				6
#define CTMI_EP_2ND_5				5
#define CTMI_EP_2ND_4				4
#define CTMI_EP_2ND_3				3
#define CTMI_EP_2ND_2				2
#define CTMI_EP_2ND_1				1
#define CTMI_EP_2ND_0				0

/* AUD3003X_2B9_CTRL_LDO */
#define CTRV_BGR_TRIM_SHIFT			0
#define CTRV_BGR_TRIM_WIDTH			4
#define CTRV_BGR_TRIM_MASK			MASK(CTRV_BGR_TRIM_WIDTH, CTRV_BGR_TRIM_SHIFT)

#define CTRV_BGR_TRIM_DEFAULT		0x8
#define CTRV_BGR_TRIM_C				0xC

/* AUD3003X_007_IRQM */
#define CDC_IRQM_SHIFT				1
#define CDC_IRQM_MASK				BIT(CDC_IRQM_SHIFT)

/* AUD3003X_F59_ETC_OTP3 */
#define EN_OSC_32K_SHIFT			7
#define EN_OSC_32K_MASK				BIT(EN_OSC_32K_SHIFT)

#endif /* _AUD3003X_H */

